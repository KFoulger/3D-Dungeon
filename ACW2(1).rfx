<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE RENDER_MONKEY [
   <!ELEMENT RENDER_MONKEY
   (
      RmEffectWorkspace |
      RmRegistryBranch |
      RmClipboardNode
   )?>

   <!ELEMENT RmEffectWorkspace 
   (
      RmRegistryBranch?,
      RmPlugInData?,
      RmStringVariable*,
      (
         ( RmDirectXEffect, RmOpenGLEffect?, RmOpenGLESEffect? ) |
         ( RmOpenGLEffect, RmDirectXEffect?, RmOpenGLESEffect? ) |
         ( RmOpenGLESEffect, RmDirectXEffect?, RmOpenGLEffect? )
      )?,
      (
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmRenderableTexture |
         RmStreamMap |
         RmModelData |
         RmEffectGroup
      )*
   )>

   <!ELEMENT RmEffectGroup
   ( 
      RmPlugInData?,
      (
         RmStringVariable |
         RmDirectXEffect |
         RmOpenGLEffect |
         RmOpenGLESEffect |
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmRenderableTexture |
         RmStreamMap |
         RmModelData
      )*
   )>

   <!ELEMENT RmDirectXEffect
   ( 
      RmPlugInData?,
      (
         RmStringVariable |
         RmCamera |
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmRenderableTexture |
         RmStreamMap |
         RmModelData |
         RmPass
      )*
   )>

   <!ELEMENT RmOpenGLEffect
   (
      RmPlugInData?,
      (
         RmStringVariable |
         RmCamera |
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmRenderableTexture |
         RmStreamMap |
         RmModelData |
         RmGLPass
      )*
   )>
   
   <!ELEMENT RmOpenGLESEffect
   (
      RmPlugInData?,
      (
         RmStringVariable |
         RmCamera |
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmRenderableTexture |
         RmStreamMap |
         RmModelData |
         RmGLESPass
      )*
   )>

   <!ELEMENT RmPass
   ( 
      RmPlugInData?,
      RmStringVariable*,
      RmCameraReference?,
      RmModelReference?,
      RmRenderStateBlock?,
      (
         (
         ( RmHLSLShader | RmShader ),
         ( RmShader | RmHLSLShader )?
         )
      )?,
      RmRenderTarget*,
      RmTessellationNode?,
      RmStreamMapReference?,
      (
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmTextureObject |
         RmLightObject |
         RmMaterialObject
         )*
      )>
                                                                     
   <!ELEMENT RmGLPass
   ( 
      RmPlugInData?,
      RmStringVariable*,
      RmCameraReference?,
      RmModelReference?,
      RmRenderStateBlock?,
      (
         ( RmGLShader, RmGLShader? ) 
      )?,
      RmRenderTarget?,
      RmStreamMapReference?,
      (
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmTextureObject |
         RmLightObject |
         RmMaterialObject |
         RmShaderConstant |
         RmSampler
         )*
      )>

   <!ELEMENT RmGLESPass
   ( 
      RmPlugInData?,
      RmStringVariable*,
      RmCameraReference?,
      RmModelReference?,
      RmRenderStateBlock?,
      (
         ( RmGLESShader, RmGLESShader? ) 
      )?,
      RmRenderTarget?,
      RmStreamMapReference?,
      (
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmTextureObject |
         RmLightObject |
         RmMaterialObject |
         RmShaderConstant |
         RmSampler
         )*
      )>      
      
   <!ELEMENT RmShader
   ( 
      RmShaderCode,
      RmPlugInData?,
      (
      RmStringVariable |
      RmShaderConstant
      )*
   )>

   <!ELEMENT RmHLSLShader
   ( 
      RmShaderCode,
      RmPlugInData?,
      (
      RmStringVariable |
      RmShaderConstant |
      RmSampler
      )*
   )>

   <!ELEMENT RmGLShader
   ( 
      RmShaderCode,
      RmPlugInData?,
      (
      RmStringVariable
      )*
   )>

   <!ELEMENT RmGLESShader
   ( 
      RmShaderCode,
      RmPlugInData?,
      (
      RmStringVariable
      )*
   )>
   
   <!ELEMENT RmTextureObject
   (
      RmPlugInData?,
      RmStringVariable*,
      RmTextureReference?,
      RmState*
   )>

   <!ELEMENT RmLightObject
   (
      RmPlugInData?,
      RmStringVariable*,
      RmLightReference?
   )>
   
   <!ELEMENT RmMaterialObject
   (
      RmPlugInData?,
      RmStringVariable*,
      RmMaterialReference?
   )>
   
   <!ELEMENT RmRenderStateBlock
   (
      RmPlugInData?,
      (
         RmStringVariable |
         RmState 
      )*
   )>

   <!ELEMENT RmTessellationNode
   (
      RmPlugInData?,
      RmStringVariable*
   )>
   
   <!ELEMENT RmStreamMap
   (
      RmPlugInData?,
      (
         RmStringVariable |
         RmStream 
      )*
   )>

   <!ELEMENT RmStream               ( RmPlugInData?, RmStreamChannel* )>

   <!ELEMENT RmModelData            ( RmPlugInData?, RmStringVariable* )>  
   <!ELEMENT RmTextureReference     ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmLightReference       ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmMaterialReference    ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmCameraReference      ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmModelReference       ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmStreamMapReference   ( RmPlugInData?, RmStringVariable* )>   
   <!ELEMENT RmRenderableTexture    ( RmPlugInData?, RmStringVariable* )>   
   <!ELEMENT RmRenderTarget         ( RmPlugInData?, RmStringVariable* )>   
   <!ELEMENT RmBooleanVariable      ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmFloatVariable        ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmVectorVariable       ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmMatrixVariable       ( RmPlugInData?, RmStringVariable? )>   
   <!ELEMENT RmColorVariable        ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmIntegerVariable      ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT Rm2DTextureVariable    ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmCubemapVariable      ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT Rm3DTextureVariable    ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmLightVariable        ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmMaterialVariable     ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmCamera               ( RmPlugInData?, RmStringVariable* )>

   <!ELEMENT RmStringVariable       ( RmTextDataBlock, RmPlugInData? )>
   
   <!ELEMENT RmDynamicVariable
   (
      RmDynamicVariableValueContainer,
      RmPlugInData?,
      RmStringVariable?
   )>
   
   <!ELEMENT RmDynamicVariableValueContainer
   (
      RmPlugInData?,
      RmDynamicVariableValue*
   )>
   
   <!ELEMENT RmTextDataBlock        ( #PCDATA ) >
   
   <!ELEMENT RmRegistryBranch
   ( 
      RmTextDataBlock?,
      (
         RmRegistryBranch |
         RmStringVariable |
         RmIntegerVariable |
         RmBooleanVariable |
         RmFloatVariable
      )*      
   )>

   <!ELEMENT RmPlugInData
   ( 
      RmTextDataBlock?,
      (
         RmStringVariable |
         RmIntegerVariable |
         RmBooleanVariable |
         RmFloatVariable |
         RmVectorVariable
      )*      
   )>
   
   <!ELEMENT RmClipboardNode
   (
      RmTextDataBlock?,
      (
         RmEffectWorkspace |
         RmEffectGroup |
         RmDirectXEffect |
         RmOpenGLEffect |
         RmOpenGLESEffect |
         RmPass |
         RmGLPass |
         RmGLESPass |
         RmShader |
         RmHLSLShader |
         RmGLShader |
         RmGLESShader |
         RmShaderConstant |
         RmSampler |
         RmTextureObject |
         RmLightObject |
         RmMaterialObject |
         RmRenderStateBlock |
         RmState |
         RmStreamMap |
         RmStream |
         RmStreamChannel |
         RmModelData |
         RmTextureReference |
         RmLightReference |
         RmMaterialReference |
         RmModelReference |
         RmStreamMapReference |
         RmRenderableTexture |
         RmRenderTarget |
         RmBooleanVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmDynamicVariableValue |
         RmColorVariable |
         RmIntegerVariable |
         RmStringVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmRegistryBranch |
         RmPlugInData |
         RmCamera |
         RmCameraReference
      )*      
   )>
   
   <!ELEMENT RmStreamChannel        ( RmPlugInData? ) >
   <!ELEMENT RmShaderConstant       ( RmPlugInData? ) >
   <!ELEMENT RmSampler              ( RmPlugInData? ) >
   <!ELEMENT RmState                ( RmPlugInData? ) >
   <!ELEMENT RmDynamicVariableValue ( RmPlugInData? ) >
   
   <!ELEMENT RmShaderCode           ( #PCDATA ) >

   <!ATTLIST RmEffectWorkspace 
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ACTIVE_EFFECT                 CDATA #REQUIRED
      VALIDATION_STRING             CDATA #REQUIRED
      XML_VERSION                   CDATA #REQUIRED
   >                                 

   <!ATTLIST RmEffectGroup           
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >                                 

   <!ATTLIST RmDirectXEffect                
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ACTIVE_CAMERA                 CDATA #REQUIRED
   >                                 

   <!ATTLIST RmOpenGLEffect                
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ACTIVE_CAMERA                 CDATA #REQUIRED
   >                                 
   
   <!ATTLIST RmOpenGLESEffect                
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ACTIVE_CAMERA                 CDATA #REQUIRED
   >                                 

   <!ATTLIST RmPass                  
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PASS_INDEX                    CDATA #REQUIRED
      ENABLED                       ( TRUE | FALSE ) #REQUIRED
   >                                 

   <!ATTLIST RmGLPass                  
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PASS_INDEX                    CDATA #REQUIRED
      ENABLED                       ( TRUE | FALSE ) #REQUIRED
   >                                 
   
   <!ATTLIST RmGLESPass                  
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PASS_INDEX                    CDATA #REQUIRED
      ENABLED                       ( TRUE | FALSE ) #REQUIRED
   >                                 
   
   <!ATTLIST RmShader        
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PIXEL_SHADER                  CDATA #REQUIRED
   >                                 

   <!ATTLIST RmHLSLShader        
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PIXEL_SHADER                  ( TRUE | FALSE ) #REQUIRED
      TARGET                        CDATA #REQUIRED
      ENTRY_POINT                   CDATA #REQUIRED
      COMPILER_FLAGS                CDATA #REQUIRED
   >  

   <!ATTLIST RmGLShader        
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PIXEL_SHADER                  ( TRUE | FALSE ) #REQUIRED
   >  
   
   <!ATTLIST RmGLESShader        
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PIXEL_SHADER                  ( TRUE | FALSE ) #REQUIRED
   >  

   <!ATTLIST RmShaderConstant
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      REGISTER                      CDATA #REQUIRED
   >                                 

   <!ATTLIST RmSampler               
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      REGISTER                      CDATA #REQUIRED
   >

   <!ATTLIST RmTextureObject
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      STATE_INDEX                   CDATA #REQUIRED
      VERTEX_TEXTURE                ( TRUE | FALSE ) #REQUIRED
   >

   <!ATTLIST RmLightObject
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      INDEX                         CDATA #REQUIRED
   >
   
   <!ATTLIST RmMaterialObject
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      INDEX                         CDATA #REQUIRED
   >
   
   <!ATTLIST RmRenderStateBlock
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >                                 

   <!ATTLIST RmState                 
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      STATE                         CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
      USAGE                         CDATA #REQUIRED
   >                               

   <!ATTLIST RmStreamMap           
     NAME                           CDATA #REQUIRED
     API                            CDATA #REQUIRED
   >                               

   <!ATTLIST RmStream              
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      STRIDE                        CDATA #REQUIRED
   >

   <!ATTLIST RmStreamChannel
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      DATA_SIZE                     CDATA #REQUIRED
      DATA_TYPE                     CDATA #REQUIRED
      REGISTER                      CDATA #REQUIRED
      USAGE                         CDATA #REQUIRED
      USAGE_INDEX                   CDATA #REQUIRED
      ATTRIBUTE_NAME                CDATA #REQUIRED
   >

   <!ATTLIST RmModelData
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
      ORIENTATION                   CDATA #REQUIRED
   >

   <!ATTLIST RmTextureReference
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >

   <!ATTLIST RmLightReference
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >
   
   <!ATTLIST RmMaterialReference
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >
   
   <!ATTLIST RmModelReference
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >

   <!ATTLIST RmStreamMapReference
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >

   <!ATTLIST RmRenderableTexture
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
      ORIGIN                        CDATA #REQUIRED
      WIDTH                         CDATA #REQUIRED
      HEIGHT                        CDATA #REQUIRED
      FORMAT                        CDATA #REQUIRED
      USE_VIEWPORT_DIMENSIONS       ( TRUE | FALSE ) #REQUIRED
      GENERATE_MIPMAPS              ( TRUE | FALSE ) #REQUIRED
      WIDTH_RATIO                   CDATA #REQUIRED
      HEIGHT_RATIO                  CDATA #REQUIRED
   >

   <!ATTLIST RmRenderTarget
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      INDEX                         CDATA #REQUIRED
      RENDER_TO_SCREEN              ( TRUE | FALSE ) #REQUIRED
      COLOR_CLEAR                   ( TRUE | FALSE ) #REQUIRED
      DEPTH_CLEAR                   ( TRUE | FALSE ) #REQUIRED
      CLEAR_COLOR_VALUE             CDATA #REQUIRED
      DEPTH_CLEAR_VALUE             CDATA #REQUIRED
   >
   
   <!ATTLIST RmBooleanVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
   >

   <!ATTLIST RmFloatVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
   >

   <!ATTLIST RmVectorVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE_0                       CDATA #REQUIRED
      VALUE_1                       CDATA #REQUIRED
      VALUE_2                       CDATA #REQUIRED
      VALUE_3                       CDATA #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
      NORMALIZE                     ( TRUE | FALSE ) #REQUIRED
   >

   <!ATTLIST RmMatrixVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE_0                       CDATA #REQUIRED
      VALUE_1                       CDATA #REQUIRED
      VALUE_2                       CDATA #REQUIRED
      VALUE_3                       CDATA #REQUIRED
      VALUE_4                       CDATA #REQUIRED
      VALUE_5                       CDATA #REQUIRED
      VALUE_6                       CDATA #REQUIRED
      VALUE_7                       CDATA #REQUIRED
      VALUE_8                       CDATA #REQUIRED
      VALUE_9                       CDATA #REQUIRED
      VALUE_10                      CDATA #REQUIRED
      VALUE_11                      CDATA #REQUIRED
      VALUE_12                      CDATA #REQUIRED
      VALUE_13                      CDATA #REQUIRED
      VALUE_14                      CDATA #REQUIRED
      VALUE_15                      CDATA #REQUIRED
   >

   <!ATTLIST RmDynamicVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VARIABLE_TYPE                 ( FLOAT | INTEGER | BOOLEAN ) #REQUIRED
      ROWS                          CDATA #REQUIRED
      COLUMNS                       CDATA #REQUIRED
      FIXED_SIZE                    ( TRUE | FALSE ) #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
      NORMALIZE                     ( TRUE | FALSE ) #REQUIRED
   >
   
   <!ATTLIST RmDynamicVariableValue
      ROW_INDEX                     CDATA #REQUIRED
      COLUMN_INDEX                  CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
   >
   
   <!ATTLIST RmColorVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE_0                       CDATA #REQUIRED
      VALUE_1                       CDATA #REQUIRED
      VALUE_2                       CDATA #REQUIRED
      VALUE_3                       CDATA #REQUIRED
   >

   <!ATTLIST RmIntegerVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
   >
   
   <!ATTLIST RmStringVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
   >

   <!ATTLIST Rm2DTextureVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
      ORIGIN                        CDATA #REQUIRED
   >

   <!ATTLIST RmCubemapVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
      ORIGIN                        CDATA #REQUIRED
   >

   <!ATTLIST Rm3DTextureVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
      ORIGIN                        CDATA #REQUIRED
   >

   <!ATTLIST RmLightVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      LIGHT_ENABLED                 ( TRUE | FALSE ) #REQUIRED
      LIGHT_TYPE                    ( POSITIONAL | DIRECTIONAL | SPOTLIGHT ) #REQUIRED
      AMBIENT_0                     CDATA #REQUIRED
      AMBIENT_1                     CDATA #REQUIRED
      AMBIENT_2                     CDATA #REQUIRED
      AMBIENT_3                     CDATA #REQUIRED
      DIFFUSE_0                     CDATA #REQUIRED
      DIFFUSE_1                     CDATA #REQUIRED
      DIFFUSE_2                     CDATA #REQUIRED
      DIFFUSE_3                     CDATA #REQUIRED
      SPECULAR_0                    CDATA #REQUIRED
      SPECULAR_1                    CDATA #REQUIRED
      SPECULAR_2                    CDATA #REQUIRED
      SPECULAR_3                    CDATA #REQUIRED
      POSITION_0                    CDATA #REQUIRED
      POSITION_1                    CDATA #REQUIRED
      POSITION_2                    CDATA #REQUIRED
      DIRECTION_0                   CDATA #REQUIRED
      DIRECTION_1                   CDATA #REQUIRED
      DIRECTION_2                   CDATA #REQUIRED
      ATTENUATION_0                 CDATA #REQUIRED
      ATTENUATION_1                 CDATA #REQUIRED
      ATTENUATION_2                 CDATA #REQUIRED
      SPOTLIGHT_THETA               CDATA #REQUIRED
      SPOTLIGHT_PHI                 CDATA #REQUIRED
      RANGE                         CDATA #REQUIRED
      FALLOFF                       CDATA #REQUIRED
   >
   
   <!ATTLIST RmMaterialVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      AMBIENT_0                     CDATA #REQUIRED
      AMBIENT_1                     CDATA #REQUIRED
      AMBIENT_2                     CDATA #REQUIRED
      AMBIENT_3                     CDATA #REQUIRED
      DIFFUSE_0                     CDATA #REQUIRED
      DIFFUSE_1                     CDATA #REQUIRED
      DIFFUSE_2                     CDATA #REQUIRED
      DIFFUSE_3                     CDATA #REQUIRED
      SPECULAR_0                    CDATA #REQUIRED
      SPECULAR_1                    CDATA #REQUIRED
      SPECULAR_2                    CDATA #REQUIRED
      SPECULAR_3                    CDATA #REQUIRED
      EMISSIVE_0                    CDATA #REQUIRED
      EMISSIVE_1                    CDATA #REQUIRED
      EMISSIVE_2                    CDATA #REQUIRED
      EMISSIVE_3                    CDATA #REQUIRED
      SPECULAR_POWER                CDATA #REQUIRED
   >
      
   <!ATTLIST RmRegistryBranch
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      XML_VERSION                   CDATA #REQUIRED
   >
   
   <!ATTLIST RmPlugInData
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PLUGIN_GUID                   CDATA #REQUIRED
   >

   <!ATTLIST RmClipboardNode
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      XML_VERSION                   CDATA #REQUIRED
   >
   
   <!ATTLIST RmCamera                
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      CAMERA_POSITION_X             CDATA #REQUIRED
      CAMERA_POSITION_Y             CDATA #REQUIRED
      CAMERA_POSITION_Z             CDATA #REQUIRED
      LOOK_AT_VECTOR_X              CDATA #REQUIRED
      LOOK_AT_VECTOR_Y              CDATA #REQUIRED
      LOOK_AT_VECTOR_Z              CDATA #REQUIRED
      UP_VECTOR_X                   CDATA #REQUIRED
      UP_VECTOR_Y                   CDATA #REQUIRED
      UP_VECTOR_Z                   CDATA #REQUIRED
      FOV                           CDATA #REQUIRED
      NEAR_CLIP_PLANE               CDATA #REQUIRED
      FAR_CLIP_PLANE                CDATA #REQUIRED
   >                                 

   <!ATTLIST RmCameraReference                
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      USE_ACTIVE_CAMERA             ( TRUE | FALSE ) #REQUIRED
   >                               
   
   <!ATTLIST RmShaderCode                
      TYPE                          ( TEXT ) #REQUIRED
   >                               
   
   <!ATTLIST RmTextDataBlock                
      TYPE                          ( TEXT ) #REQUIRED
   >                               
   
   <!ATTLIST RmTessellationNode
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      MIN_TESSELLATION_LEVEL        CDATA #REQUIRED
      MAX_TESSELLATION_LEVEL        CDATA #REQUIRED
   >
]>
<RENDER_MONKEY>
 <RmEffectWorkspace NAME="Effect Workspace" API="" ACTIVE_EFFECT="Effect Workspace.Textured Phong" VALIDATION_STRING="" XML_VERSION="RenderMonkey 1.71">
  <RmRegistryBranch NAME="RM_REGISTRY" API="" XML_VERSION="RenderMonkey 1.71">
   <RmRegistryBranch NAME="RM_LOCAL" API="" XML_VERSION="RenderMonkey 1.71">
    <RmRegistryBranch NAME="RM_PLUGIN" API="" XML_VERSION="RenderMonkey 1.71"><RmTextDataBlock TYPE="TEXT"><![CDATA[
<DockingPaneLayouts><Application_Layout><Pane-1><Type>0</Type><DockingCX>250</DockingCX><DockingCY>250</DockingCY><Title>Artist Editor</Title><ID>1001</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>61</DockingHolder><FloatingHolder>0</FloatingHolder><LastHolder>61</LastHolder></Pane-1><Pane-2><Type>2</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><Horiz>1</Horiz><Pane-1>3</Pane-1><Pane-2>4</Pane-2><Pane-3>5</Pane-3><Pane-4>6</Pane-4><Pane-5>7</Pane-5><Pane-6>8</Pane-6><Pane-7>9</Pane-7><Pane-8>10</Pane-8><Pane-9>11</Pane-9><Pane-10>12</Pane-10><Pane-11>13</Pane-11><Pane-12>14</Pane-12><Pane-13>15</Pane-13><Pane-14>16</Pane-14><Pane-15>17</Pane-15><Pane-16>18</Pane-16><Pane-17>19</Pane-17><Pane-18>20</Pane-18><Pane-19>21</Pane-19><Pane-20>22</Pane-20><Pane-21>23</Pane-21><Pane-22>24</Pane-22><Pane-23>25</Pane-23><Pane-24>26</Pane-24><Pane-25>27</Pane-25><Pane-26>28</Pane-26><Pane-27>29</Pane-27><Pane-28>30</Pane-28><Pane-29>31</Pane-29><Pane-30>32</Pane-30><Pane-31>33</Pane-31><Pane-32>34</Pane-32><Pane-33>35</Pane-33><Pane-34>36</Pane-34><Pane-35>37</Pane-35><Pane-36>38</Pane-36><Pane-37>39</Pane-37><Pane-38>40</Pane-38><Pane-39>41</Pane-39><Pane-40>42</Pane-40><Pane-41>43</Pane-41><Pane-42>44</Pane-42><Pane-43>45</Pane-43><Pane-44>46</Pane-44><Pane-45>47</Pane-45><Pane-46>48</Pane-46><Pane-47>49</Pane-47><Pane-48>50</Pane-48><Pane-49>51</Pane-49><Pane-50>52</Pane-50><Pane-51>53</Pane-51><Pane-52>54</Pane-52><Pane-53>55</Pane-53><Pane-54>56</Pane-54><Panes>54</Panes></Pane-2><Pane-3><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-3><Pane-4><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-4><Pane-5><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-5><Pane-6><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-6><Pane-7><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-7><Pane-8><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-8><Pane-9><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-9><Pane-10><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-10><Pane-11><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-11><Pane-12><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-12><Pane-13><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-13><Pane-14><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-14><Pane-15><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-15><Pane-16><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-16><Pane-17><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-17><Pane-18><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-18><Pane-19><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-19><Pane-20><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-20><Pane-21><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-21><Pane-22><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-22><Pane-23><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-23><Pane-24><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-24><Pane-25><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-25><Pane-26><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-26><Pane-27><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-27><Pane-28><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-28><Pane-29><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-29><Pane-30><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-30><Pane-31><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-31><Pane-32><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-32><Pane-33><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-33><Pane-34><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-34><Pane-35><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-35><Pane-36><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-36><Pane-37><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-37><Pane-38><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-38><Pane-39><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-39><Pane-40><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-40><Pane-41><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-41><Pane-42><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-42><Pane-43><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-43><Pane-44><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-44><Pane-45><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-45><Pane-46><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-46><Pane-47><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-47><Pane-48><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-48><Pane-49><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-49><Pane-50><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-50><Pane-51><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-51><Pane-52><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-52><Pane-53><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-53><Pane-54><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-54><Pane-55><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-55><Pane-56><Type>2</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><Horiz>0</Horiz><Pane-1>57</Pane-1><Pane-2>62</Pane-2><Panes>2</Panes></Pane-56><Pane-57><Type>2</Type><DockingCX>0</DockingCX><DockingCY>520</DockingCY><Horiz>1</Horiz><Pane-1>58</Pane-1><Pane-2>60</Pane-2><Pane-3>61</Pane-3><Panes>3</Panes></Pane-57><Pane-58><Type>1</Type><DockingCX>250</DockingCX><DockingCY>250</DockingCY><Selected>59</Selected><Panes>1</Panes><Pane-1>59</Pane-1></Pane-58><Pane-59><Type>0</Type><DockingCX>250</DockingCX><DockingCY>250</DockingCY><Title>Workspace</Title><ID>1000</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>58</DockingHolder><FloatingHolder>0</FloatingHolder><LastHolder>58</LastHolder></Pane-59><Pane-60><Type>4</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY></Pane-60><Pane-61><Type>1</Type><DockingCX>250</DockingCX><DockingCY>250</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-61><Pane-62><Type>1</Type><DockingCX>250</DockingCX><DockingCY>192</DockingCY><Selected>63</Selected><Panes>1</Panes><Pane-1>63</Pane-1></Pane-62><Pane-63><Type>0</Type><DockingCX>250</DockingCX><DockingCY>250</DockingCY><Title>Output</Title><ID>1002</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>62</DockingHolder><FloatingHolder>0</FloatingHolder><LastHolder>62</LastHolder></Pane-63><Pane-64><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>Scale</Title><ID>1100</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>55</DockingHolder><FloatingHolder>67</FloatingHolder><LastHolder>67</LastHolder></Pane-64><Pane-65><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>66</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-65><Pane-66><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>67</Pane-1><Panes>1</Panes></Pane-66><Pane-67><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-67><Pane-68><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>Scale</Title><ID>1101</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>54</DockingHolder><FloatingHolder>71</FloatingHolder><LastHolder>71</LastHolder></Pane-68><Pane-69><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>70</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-69><Pane-70><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>71</Pane-1><Panes>1</Panes></Pane-70><Pane-71><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-71><Pane-72><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvAmbient</Title><ID>1102</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>53</DockingHolder><FloatingHolder>75</FloatingHolder><LastHolder>75</LastHolder></Pane-72><Pane-73><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>74</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-73><Pane-74><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>75</Pane-1><Panes>1</Panes></Pane-74><Pane-75><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-75><Pane-76><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvDiffuse</Title><ID>1103</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>52</DockingHolder><FloatingHolder>79</FloatingHolder><LastHolder>79</LastHolder></Pane-76><Pane-77><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>78</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-77><Pane-78><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>79</Pane-1><Panes>1</Panes></Pane-78><Pane-79><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-79><Pane-80><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvSpecular</Title><ID>1104</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>51</DockingHolder><FloatingHolder>83</FloatingHolder><LastHolder>83</LastHolder></Pane-80><Pane-81><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>82</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-81><Pane-82><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>83</Pane-1><Panes>1</Panes></Pane-82><Pane-83><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-83><Pane-84><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>Scale</Title><ID>1105</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>50</DockingHolder><FloatingHolder>87</FloatingHolder><LastHolder>87</LastHolder></Pane-84><Pane-85><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>86</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-85><Pane-86><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>87</Pane-1><Panes>1</Panes></Pane-86><Pane-87><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-87><Pane-88><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>Scale</Title><ID>1106</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>49</DockingHolder><FloatingHolder>91</FloatingHolder><LastHolder>91</LastHolder></Pane-88><Pane-89><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>90</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-89><Pane-90><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>91</Pane-1><Panes>1</Panes></Pane-90><Pane-91><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-91><Pane-92><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>Scale</Title><ID>1107</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>48</DockingHolder><FloatingHolder>95</FloatingHolder><LastHolder>95</LastHolder></Pane-92><Pane-93><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>94</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-93><Pane-94><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>95</Pane-1><Panes>1</Panes></Pane-94><Pane-95><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-95><Pane-96><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>x</Title><ID>1108</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>47</DockingHolder><FloatingHolder>99</FloatingHolder><LastHolder>99</LastHolder></Pane-96><Pane-97><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>98</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-97><Pane-98><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>99</Pane-1><Panes>1</Panes></Pane-98><Pane-99><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-99><Pane-100><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>y</Title><ID>1109</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>46</DockingHolder><FloatingHolder>103</FloatingHolder><LastHolder>103</LastHolder></Pane-100><Pane-101><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>102</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-101><Pane-102><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>103</Pane-1><Panes>1</Panes></Pane-102><Pane-103><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-103><Pane-104><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvDiffuse</Title><ID>1110</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>45</DockingHolder><FloatingHolder>107</FloatingHolder><LastHolder>107</LastHolder></Pane-104><Pane-105><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>106</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-105><Pane-106><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>107</Pane-1><Panes>1</Panes></Pane-106><Pane-107><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-107><Pane-108><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>y</Title><ID>1111</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>44</DockingHolder><FloatingHolder>111</FloatingHolder><LastHolder>111</LastHolder></Pane-108><Pane-109><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>110</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-109><Pane-110><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>111</Pane-1><Panes>1</Panes></Pane-110><Pane-111><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-111><Pane-112><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvDiffuse</Title><ID>1112</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>43</DockingHolder><FloatingHolder>115</FloatingHolder><LastHolder>115</LastHolder></Pane-112><Pane-113><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>114</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-113><Pane-114><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>115</Pane-1><Panes>1</Panes></Pane-114><Pane-115><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-115><Pane-116><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvAmbient</Title><ID>1113</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>42</DockingHolder><FloatingHolder>119</FloatingHolder><LastHolder>119</LastHolder></Pane-116><Pane-117><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>118</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>333</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-117><Pane-118><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>119</Pane-1><Panes>1</Panes></Pane-118><Pane-119><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-119><Pane-120><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvAmbient</Title><ID>1114</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>41</DockingHolder><FloatingHolder>123</FloatingHolder><LastHolder>123</LastHolder></Pane-120><Pane-121><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>122</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-121><Pane-122><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>123</Pane-1><Panes>1</Panes></Pane-122><Pane-123><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-123><Pane-124><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvSpecular</Title><ID>1115</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>40</DockingHolder><FloatingHolder>127</FloatingHolder><LastHolder>127</LastHolder></Pane-124><Pane-125><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>126</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-125><Pane-126><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>127</Pane-1><Panes>1</Panes></Pane-126><Pane-127><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-127><Pane-128><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>Scale</Title><ID>1116</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>39</DockingHolder><FloatingHolder>131</FloatingHolder><LastHolder>131</LastHolder></Pane-128><Pane-129><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>130</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-129><Pane-130><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>131</Pane-1><Panes>1</Panes></Pane-130><Pane-131><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-131><Pane-132><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvAmbient</Title><ID>1117</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>38</DockingHolder><FloatingHolder>135</FloatingHolder><LastHolder>135</LastHolder></Pane-132><Pane-133><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>134</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-133><Pane-134><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>135</Pane-1><Panes>1</Panes></Pane-134><Pane-135><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-135><Pane-136><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvDiffuse</Title><ID>1118</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>37</DockingHolder><FloatingHolder>139</FloatingHolder><LastHolder>139</LastHolder></Pane-136><Pane-137><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>138</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-137><Pane-138><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>139</Pane-1><Panes>1</Panes></Pane-138><Pane-139><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-139><Pane-140><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>y</Title><ID>1119</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>36</DockingHolder><FloatingHolder>143</FloatingHolder><LastHolder>143</LastHolder></Pane-140><Pane-141><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>142</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-141><Pane-142><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>143</Pane-1><Panes>1</Panes></Pane-142><Pane-143><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-143><Pane-144><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>Scale</Title><ID>1120</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>35</DockingHolder><FloatingHolder>147</FloatingHolder><LastHolder>147</LastHolder></Pane-144><Pane-145><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>146</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-145><Pane-146><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>147</Pane-1><Panes>1</Panes></Pane-146><Pane-147><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-147><Pane-148><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvAmbient</Title><ID>1121</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>34</DockingHolder><FloatingHolder>151</FloatingHolder><LastHolder>151</LastHolder></Pane-148><Pane-149><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>150</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-149><Pane-150><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>151</Pane-1><Panes>1</Panes></Pane-150><Pane-151><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-151><Pane-152><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>bias0</Title><ID>1122</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>33</DockingHolder><FloatingHolder>155</FloatingHolder><LastHolder>155</LastHolder></Pane-152><Pane-153><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>154</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-153><Pane-154><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>155</Pane-1><Panes>1</Panes></Pane-154><Pane-155><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-155><Pane-156><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>Scale1</Title><ID>1123</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>32</DockingHolder><FloatingHolder>159</FloatingHolder><LastHolder>159</LastHolder></Pane-156><Pane-157><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>158</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-157><Pane-158><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>159</Pane-1><Panes>1</Panes></Pane-158><Pane-159><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-159><Pane-160><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>Scale</Title><ID>1124</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>31</DockingHolder><FloatingHolder>163</FloatingHolder><LastHolder>163</LastHolder></Pane-160><Pane-161><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>162</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-161><Pane-162><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>163</Pane-1><Panes>1</Panes></Pane-162><Pane-163><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-163><Pane-164><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvSpecular</Title><ID>1125</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>30</DockingHolder><FloatingHolder>167</FloatingHolder><LastHolder>167</LastHolder></Pane-164><Pane-165><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>166</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-165><Pane-166><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>167</Pane-1><Panes>1</Panes></Pane-166><Pane-167><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-167><Pane-168><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvAmbient</Title><ID>1126</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>29</DockingHolder><FloatingHolder>171</FloatingHolder><LastHolder>171</LastHolder></Pane-168><Pane-169><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>170</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-169><Pane-170><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>171</Pane-1><Panes>1</Panes></Pane-170><Pane-171><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-171><Pane-172><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvDiffuse</Title><ID>1127</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>28</DockingHolder><FloatingHolder>175</FloatingHolder><LastHolder>175</LastHolder></Pane-172><Pane-173><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>174</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-173><Pane-174><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>175</Pane-1><Panes>1</Panes></Pane-174><Pane-175><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-175><Pane-176><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvAmbient</Title><ID>1128</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>27</DockingHolder><FloatingHolder>179</FloatingHolder><LastHolder>179</LastHolder></Pane-176><Pane-177><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>178</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-177><Pane-178><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>179</Pane-1><Panes>1</Panes></Pane-178><Pane-179><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-179><Pane-180><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvDiffuse</Title><ID>1129</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>26</DockingHolder><FloatingHolder>183</FloatingHolder><LastHolder>183</LastHolder></Pane-180><Pane-181><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>182</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-181><Pane-182><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>183</Pane-1><Panes>1</Panes></Pane-182><Pane-183><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-183><Pane-184><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvDiffuse</Title><ID>1130</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>25</DockingHolder><FloatingHolder>187</FloatingHolder><LastHolder>187</LastHolder></Pane-184><Pane-185><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>186</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-185><Pane-186><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>187</Pane-1><Panes>1</Panes></Pane-186><Pane-187><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-187><Pane-188><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvSpecular</Title><ID>1131</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>24</DockingHolder><FloatingHolder>191</FloatingHolder><LastHolder>191</LastHolder></Pane-188><Pane-189><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>190</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-189><Pane-190><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>191</Pane-1><Panes>1</Panes></Pane-190><Pane-191><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-191><Pane-192><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvDiffuse</Title><ID>1132</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>23</DockingHolder><FloatingHolder>195</FloatingHolder><LastHolder>195</LastHolder></Pane-192><Pane-193><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>194</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-193><Pane-194><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>195</Pane-1><Panes>1</Panes></Pane-194><Pane-195><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-195><Pane-196><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvAmbient</Title><ID>1133</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>22</DockingHolder><FloatingHolder>199</FloatingHolder><LastHolder>199</LastHolder></Pane-196><Pane-197><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>198</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-197><Pane-198><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>199</Pane-1><Panes>1</Panes></Pane-198><Pane-199><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-199><Pane-200><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvAmbient</Title><ID>1134</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>21</DockingHolder><FloatingHolder>203</FloatingHolder><LastHolder>203</LastHolder></Pane-200><Pane-201><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>202</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-201><Pane-202><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>203</Pane-1><Panes>1</Panes></Pane-202><Pane-203><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-203><Pane-204><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvDiffuse</Title><ID>1135</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>20</DockingHolder><FloatingHolder>207</FloatingHolder><LastHolder>207</LastHolder></Pane-204><Pane-205><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>206</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-205><Pane-206><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>207</Pane-1><Panes>1</Panes></Pane-206><Pane-207><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-207><Pane-208><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvDiffuse</Title><ID>1136</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>19</DockingHolder><FloatingHolder>211</FloatingHolder><LastHolder>211</LastHolder></Pane-208><Pane-209><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>210</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-209><Pane-210><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>211</Pane-1><Panes>1</Panes></Pane-210><Pane-211><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-211><Pane-212><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvAmbient</Title><ID>1137</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>18</DockingHolder><FloatingHolder>215</FloatingHolder><LastHolder>215</LastHolder></Pane-212><Pane-213><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>214</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-213><Pane-214><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>215</Pane-1><Panes>1</Panes></Pane-214><Pane-215><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-215><Pane-216><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>Scale</Title><ID>1138</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>17</DockingHolder><FloatingHolder>219</FloatingHolder><LastHolder>219</LastHolder></Pane-216><Pane-217><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>218</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-217><Pane-218><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>219</Pane-1><Panes>1</Panes></Pane-218><Pane-219><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-219><Pane-220><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>particleSize</Title><ID>1139</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>16</DockingHolder><FloatingHolder>223</FloatingHolder><LastHolder>223</LastHolder></Pane-220><Pane-221><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>222</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-221><Pane-222><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>223</Pane-1><Panes>1</Panes></Pane-222><Pane-223><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-223><Pane-224><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>colour</Title><ID>1140</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>15</DockingHolder><FloatingHolder>227</FloatingHolder><LastHolder>227</LastHolder></Pane-224><Pane-225><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>226</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-225><Pane-226><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>227</Pane-1><Panes>1</Panes></Pane-226><Pane-227><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-227><Pane-228><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>particleSpread</Title><ID>1141</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>14</DockingHolder><FloatingHolder>231</FloatingHolder><LastHolder>231</LastHolder></Pane-228><Pane-229><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>230</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-229><Pane-230><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>231</Pane-1><Panes>1</Panes></Pane-230><Pane-231><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-231><Pane-232><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>particleSystemShape</Title><ID>1142</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>13</DockingHolder><FloatingHolder>235</FloatingHolder><LastHolder>235</LastHolder></Pane-232><Pane-233><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>234</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-233><Pane-234><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>235</Pane-1><Panes>1</Panes></Pane-234><Pane-235><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-235><Pane-236><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>particleSystemHeight</Title><ID>1143</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>12</DockingHolder><FloatingHolder>239</FloatingHolder><LastHolder>239</LastHolder></Pane-236><Pane-237><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>238</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-237><Pane-238><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>239</Pane-1><Panes>1</Panes></Pane-238><Pane-239><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-239><Pane-240><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>particleSpeed</Title><ID>1144</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>11</DockingHolder><FloatingHolder>243</FloatingHolder><LastHolder>243</LastHolder></Pane-240><Pane-241><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>242</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-241><Pane-242><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>243</Pane-1><Panes>1</Panes></Pane-242><Pane-243><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-243><Pane-244><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>particleShape</Title><ID>1145</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>10</DockingHolder><FloatingHolder>247</FloatingHolder><LastHolder>247</LastHolder></Pane-244><Pane-245><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>246</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-245><Pane-246><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>247</Pane-1><Panes>1</Panes></Pane-246><Pane-247><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-247><Pane-248><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>fvAmbient</Title><ID>1146</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>9</DockingHolder><FloatingHolder>251</FloatingHolder><LastHolder>251</LastHolder></Pane-248><Pane-249><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>250</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1335</WindowRectRightPos></Pane-249><Pane-250><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>251</Pane-1><Panes>1</Panes></Pane-250><Pane-251><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-251><Pane-252><Type>0</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Title>particlePosition</Title><ID>1147</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>8</DockingHolder><FloatingHolder>255</FloatingHolder><LastHolder>255</LastHolder></Pane-252><Pane-253><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>254</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>216</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1154</WindowRectRightPos></Pane-253><Pane-254><Type>2</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Horiz>1</Horiz><Pane-1>255</Pane-1><Panes>1</Panes></Pane-254><Pane-255><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-255><Pane-256><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>particleSystemHeight</Title><ID>1148</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>7</DockingHolder><FloatingHolder>259</FloatingHolder><LastHolder>259</LastHolder></Pane-256><Pane-257><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>258</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-257><Pane-258><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>259</Pane-1><Panes>1</Panes></Pane-258><Pane-259><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-259><Pane-260><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>particleSpread</Title><ID>1149</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>6</DockingHolder><FloatingHolder>263</FloatingHolder><LastHolder>263</LastHolder></Pane-260><Pane-261><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>262</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-261><Pane-262><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>263</Pane-1><Panes>1</Panes></Pane-262><Pane-263><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-263><Pane-264><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>particleShape</Title><ID>1150</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>5</DockingHolder><FloatingHolder>267</FloatingHolder><LastHolder>267</LastHolder></Pane-264><Pane-265><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>266</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-265><Pane-266><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>267</Pane-1><Panes>1</Panes></Pane-266><Pane-267><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-267><Pane-268><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>particleSize</Title><ID>1151</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>4</DockingHolder><FloatingHolder>271</FloatingHolder><LastHolder>271</LastHolder></Pane-268><Pane-269><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>270</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-269><Pane-270><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>271</Pane-1><Panes>1</Panes></Pane-270><Pane-271><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-271><Pane-272><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>particleShape</Title><ID>1152</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>3</DockingHolder><FloatingHolder>275</FloatingHolder><LastHolder>275</LastHolder></Pane-272><Pane-273><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>274</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>-1536</WindowRectLeftPos><WindowRectRightPos>-1101</WindowRectRightPos></Pane-273><Pane-274><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>275</Pane-1><Panes>1</Panes></Pane-274><Pane-275><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-275><Summary><TopContainer>2</TopContainer><Client>60</Client><Panes>275</Panes></Summary></Application_Layout></DockingPaneLayouts>
]]></RmTextDataBlock>
     <RmRegistryBranch NAME="RmPreviewGLWindow" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EffectPlacementRepository" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="637" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="637" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="456" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmScalarEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Back Wall.Scale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1101" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Left Wall.Scale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1105" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Right Wall.Scale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1106" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Floor.Scale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1107" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Floor.x" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1108" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Floor.y" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1109" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Roof.y" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1111" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Table.Scale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1116" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Table.y" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1119" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Teapot.Scale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1120" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Floor.bias0" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1122" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Floor.Scale1" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1123" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Pillar1.Scale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1124" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.particleHeight" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1148" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.particleSpread" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1149" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.particleShape" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1150" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.particleSize" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1151" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Fire.particleShape" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1152" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmRenderStateBlockEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="104" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="83" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1145" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="302" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="260" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="129" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmColorEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.fvAmbient" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1102" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.fvDiffuse" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1103" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.fvSpecular" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1104" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Floor.fvDiffuse" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1110" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Roof.fvDiffuse" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1112" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Roof.fvAmbient" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1113" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Floor.fvAmbient" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1114" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Floor.fvSpecular" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1115" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Table.fvAmbient" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1117" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Table.fvDiffuse" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1118" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Teapot.fvAmbient" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1121" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Pillar1.fvSpecular" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1125" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Pillar1.fvAmbient" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1126" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Pillar1.fvDiffuse" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1127" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Wood1.fvAmbient" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1128" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Wood1.fvDiffuse" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1129" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Teapot.fvDiffuse" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1130" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Teapot.fvSpecular" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1131" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.metalPlate.fvDiffuse" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1132" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.metalPlate.fvAmbient" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1133" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Prong1.fvAmbient" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1134" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Prong1.fvDiffuse" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1135" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.ArmadilloMan.fvDiffuse" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1136" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.ArmadilloMan.fvAmbient" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1137" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.snakeThing.fvAmbient" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1146" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmPreviewDx9Window" API="" XML_VERSION="RenderMonkey 1.71"/>
     <RmRegistryBranch NAME="RmPreviewGLESWindow" API="" XML_VERSION="RenderMonkey 1.71"/>
     <RmRegistryBranch NAME="RmPreviewGLPreview" API="" XML_VERSION="RenderMonkey 1.71"/>
     <RmRegistryBranch NAME="RmLightEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="NoteEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmRenderableTextureEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmRenderTargetEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmShaderEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="Effect Workspace.Textured Phong" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Disassembly" API="" XML_VERSION="RenderMonkey 1.71"/>
       <RmStringVariable NAME="Editing Shader" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
Fragment Program]]></RmTextDataBlock></RmStringVariable>
       <RmStringVariable NAME="Editing Pass" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
ArmadilloMan]]></RmTextDataBlock></RmStringVariable>
       <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="600" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="456" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmTextureObjectEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="104" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="104" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1144" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="302" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmTessellationNodeEditorDlg" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmTextureGenerator" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmStreamEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Stream Mapping" API="" XML_VERSION="RenderMonkey 1.71">
       <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1278" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="115" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="641" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="280" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmVectorEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.particlePosition" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1147" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
    </RmRegistryBranch>
    <RmRegistryBranch NAME="WORKSPACE" API="" XML_VERSION="RenderMonkey 1.71">
     <RmStringVariable NAME="LAST_SAVE" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
7/5/2018 17:49:6]]></RmTextDataBlock></RmStringVariable>
     <RmStringVariable NAME="VERSION" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
RenderMonkey Version 1.82 (build 322)]]></RmTextDataBlock></RmStringVariable>
     <RmStringVariable NAME="XML_VERSION" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
RenderMonkey 1.71]]></RmTextDataBlock></RmStringVariable>
     <RmStringVariable NAME="BASE_WORKSPACE_PATH" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
C:\Program Files (x86)\AMD\RenderMonkey 1.82\Examples\]]></RmTextDataBlock></RmStringVariable>
    </RmRegistryBranch>
   </RmRegistryBranch>
  </RmRegistryBranch>
  <RmOpenGLEffect NAME="Textured Phong" API="OpenGL" ACTIVE_CAMERA="">
   <RmFloatVariable NAME="fSpecularPower" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="25.000000" MIN="1.000000" MAX="100.000000" CLAMP="TRUE"/>
   <RmDynamicVariable NAME="fvLightPosition" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VARIABLE_TYPE="FLOAT" ROWS="3" COLUMNS="1" FIXED_SIZE="TRUE" MIN="-100.000000" MAX="100.000000" CLAMP="TRUE" NORMALIZE="FALSE">
    <RmDynamicVariableValueContainer>
     <RmDynamicVariableValue ROW_INDEX="0" COLUMN_INDEX="0" VALUE="-100.000000"/>
     <RmDynamicVariableValue ROW_INDEX="1" COLUMN_INDEX="0" VALUE="100.000000"/>
     <RmDynamicVariableValue ROW_INDEX="2" COLUMN_INDEX="0" VALUE="100.000000"/>
    </RmDynamicVariableValueContainer>
   </RmDynamicVariable>
   <RmDynamicVariable NAME="fvEyePosition" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VARIABLE_TYPE="FLOAT" ROWS="3" COLUMNS="1" FIXED_SIZE="TRUE" MIN="-100.000000" MAX="100.000000" CLAMP="TRUE" NORMALIZE="FALSE">
    <RmDynamicVariableValueContainer>
     <RmDynamicVariableValue ROW_INDEX="0" COLUMN_INDEX="0" VALUE="0.000000"/>
     <RmDynamicVariableValue ROW_INDEX="1" COLUMN_INDEX="0" VALUE="0.000000"/>
     <RmDynamicVariableValue ROW_INDEX="2" COLUMN_INDEX="0" VALUE="100.000000"/>
    </RmDynamicVariableValueContainer>
   </RmDynamicVariable>
   <RmFloatVariable NAME="particleHeight" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="25.600000" MIN="0.000000" MAX="160.000000" CLAMP="FALSE"/>
   <RmFloatVariable NAME="particleSpeed" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="0.480000" MIN="0.000000" MAX="2.000000" CLAMP="FALSE"/>
   <RmFloatVariable NAME="particleSpread" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="9.000000" MIN="0.000000" MAX="50.000000" CLAMP="FALSE"/>
   <RmFloatVariable NAME="particleConeWidth" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="1.000000" MIN="0.000000" MAX="2.000000" CLAMP="FALSE"/>
   <RmFloatVariable NAME="particleShape" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="0.850000" MIN="0.000000" MAX="1.000000" CLAMP="FALSE"/>
   <RmFloatVariable NAME="particleSize" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="5.800000" MIN="0.000000" MAX="20.000000" CLAMP="FALSE"/>
   <RmVectorVariable NAME="particlePosition" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="138.000000" VALUE_1="10.000000" VALUE_2="0.000000" VALUE_3="1.000000" MIN="-100.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
   <RmFloatVariable NAME="time" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="Time0_X" VALUE="15.825019" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
   <RmVectorVariable NAME="viewPos" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="ViewPosition" VALUE_0="-31.363297" VALUE_1="33.574871" VALUE_2="129.507187" VALUE_3="1.000000" MIN="-10.000000" MAX="10.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
   <RmMatrixVariable NAME="viewInv" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="ViewInverse" VALUE_0="1.000000" VALUE_1="0.000000" VALUE_2="0.000000" VALUE_3="0.000000" VALUE_4="0.000000" VALUE_5="1.000000" VALUE_6="0.000000" VALUE_7="0.000000" VALUE_8="0.000000" VALUE_9="0.000000" VALUE_10="1.000000" VALUE_11="200.000000" VALUE_12="0.000000" VALUE_13="0.000000" VALUE_14="0.000000" VALUE_15="1.000000"/>
   <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.427451" VALUE_1="0.303623" VALUE_2="0.248205" VALUE_3="1.000000"/>
   <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.337255" VALUE_1="0.224265" VALUE_2="0.034073" VALUE_3="1.000000"/>
   <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.458824" VALUE_1="0.316745" VALUE_2="0.273411" VALUE_3="1.000000"/>
   <Rm2DTextureVariable NAME="Wood" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="Wood.dds" ORIGIN="0"/>
   <Rm2DTextureVariable NAME="Stone" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="stone-texture-10-pack-3d-model.png" ORIGIN="0"/>
   <Rm2DTextureVariable NAME="Rust" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="rustymetal.tga" ORIGIN="0"/>
   <Rm2DTextureVariable NAME="FieldstoneBumpDOT3" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="FieldstoneBumpDOT3.tga" ORIGIN="0"/>
   <Rm2DTextureVariable NAME="rockwallBump" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="rockwall_normal.bmp" ORIGIN="0"/>
   <Rm2DTextureVariable NAME="Flame" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" FILE_NAME="Flame.tga" ORIGIN="0"/>
   <Rm2DTextureVariable NAME="Fieldstone" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" FILE_NAME="Fieldstone.tga" ORIGIN="0"/>
   <Rm2DTextureVariable NAME="Rockwall" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="rockwall (1).jpg" ORIGIN="0"/>
   <RmStreamMap NAME="Stream Mapping" API="">
    <RmStream NAME="Stream" API="" STRIDE="56">
     <RmStreamChannel NAME="Position_0" API="" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="0" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_Vertex"/>
     <RmStreamChannel NAME="TexCoord_0" API="" DATA_SIZE="8" DATA_TYPE="1" REGISTER="0" USAGE="5" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_TexCoord0"/>
     <RmStreamChannel NAME="Normal_0" API="" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="3" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_Normal"/>
     <RmStreamChannel NAME="Binormal_0" API="" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="7" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_Binormal"/>
     <RmStreamChannel NAME="Tangent_0" API="" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="6" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_Tangent"/>
    </RmStream>
   </RmStreamMap>
   <RmModelData NAME="Sphere" API="" FILE_NAME=".\Sphere.3ds" ORIENTATION="0"/>
   <RmModelData NAME="Model" API="" FILE_NAME=".\OceanSurface.3ds" ORIENTATION="0"/>
   <RmModelData NAME="Teapot" API="" FILE_NAME=".\Teapot.3ds" ORIENTATION="0"/>
   <RmModelData NAME="Cube" API="" FILE_NAME=".\Cube.x" ORIENTATION="0"/>
   <RmModelData NAME="Pillar" API="" FILE_NAME=".\Column N050418.3ds" ORIENTATION="0"/>
   <RmModelData NAME="QuadArray" API="" FILE_NAME=".\QuadArray.3ds" ORIENTATION="0"/>
   <RmModelData NAME="Armadillo" API="" FILE_NAME=".\Armadillo.obj" ORIENTATION="0"/>
   <RmGLPass NAME="Teapot2" API="OpenGL" PASS_INDEX="16" ENABLED="TRUE">
    <RmModelReference NAME="Teapot" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_DepthEnable" API="OpenGL" STATE="44" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D bumpMap;
uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3 N = 2.0 * texture2D(bumpMap, Texcoord).xyz - 1.0;
   
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

uniform float Scale;

attribute vec3 rm_Binormal;
attribute vec3 rm_Tangent;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

uniform float time;

mat4 rotY(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(c, 0, -s, 0,
                 0, 1, 0, 0, 
                 s, 0, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   inPos.x *= Scale;
   inPos.y *= Scale;
   inPos.z *= Scale;
   inPos *= rotY(-1.5807);
   float disp = 8.0 * sin(time * 10.0);
      
   if(inPos.y < 1 && inPos.y > -1 && inPos.z < 5 && inPos.z > -5){
      inPos.x *= 2;
}

   if(inPos.x > 29 || inPos.x < -29){
      inPos.y += disp;
      }
   inPos.x += 1;
   inPos.y += 10;
   inPos.z -= 70;
   
   inPos.y -= (disp/4);

   vec3 vBinormal = gl_NormalMatrix * rm_Binormal;
   vec3 vTangent = gl_NormalMatrix * rm_Tangent;
   
   Normal = normalize(Normal);
   vBinormal = normalize(vBinormal);
   vTangent = normalize(vTangent);
   
   mat3 View2Tangent = mat3(vTangent, vBinormal, Normal);
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy * 0.3;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   
   ViewDirection *= View2Tangent;
   LightDirection *= View2Tangent;
   
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="Scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.350000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="time" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="Time0_X" VALUE="15.825019" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.427451" VALUE_1="0.303623" VALUE_2="0.248205" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.337255" VALUE_1="0.224265" VALUE_2="0.034073" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.820647" VALUE_1="0.794703" VALUE_2="0.822222" VALUE_3="1.000000"/>
    <Rm2DTextureVariable NAME="Rusty Bump" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="rustymetalBump.tga" ORIGIN="0"/>
    <RmTextureObject NAME="bumpMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Rusty Bump" API=""/>
    </RmTextureObject>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Rust" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="bumpMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="time" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="Scale" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Left Wall" API="OpenGL" PASS_INDEX="1" ENABLED="TRUE">
    <RmModelReference NAME="Model" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_DepthEnable" API="OpenGL" STATE="44" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="2" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D bumpMap;
uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3 N = 2.0 * texture2D(bumpMap, Texcoord).xyz - 1.0;

   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform float particleSystemHeight;
uniform vec4 view_position;
uniform vec4 particleSystemPosition;
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

uniform float Scale;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

attribute vec3 rm_Binormal;
attribute vec3 rm_Tangent;

mat4 rotY(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(c, 0, -s, 0,
                 0, 1, 0, 0, 
                 s, 0, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   inPos.z = 10;
   inPos.x *= Scale;
   inPos.y *= Scale;
   inPos *= rotY(1.5708);
   inPos.x -= 130;
   inPos.z += 115;
   
   vec3 vBinormal = gl_NormalMatrix * rm_Binormal;
   vec3 vTangent = gl_NormalMatrix * rm_Tangent;
   
   Normal = normalize(Normal);
   vBinormal = normalize(vBinormal);
   vTangent = normalize(vTangent);
   
   mat3 View2Tangent = mat3(vTangent, vBinormal, Normal);
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy * 3.5;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   
   ViewDirection *= View2Tangent;
   LightDirection *= View2Tangent;
   
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="Scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.200000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Fieldstone" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmTextureObject NAME="bumpMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="FieldstoneBumpDOT3" API=""/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="bumpMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="Scale" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Wood1" API="OpenGL" PASS_INDEX="17" ENABLED="TRUE">
    <RmModelReference NAME="Cube" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D bumpMap;
uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3 N = 2.0 * texture2D(bumpMap, Texcoord).xyz - 1.0;

   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

attribute vec3 rm_Binormal;
attribute vec3 rm_Tangent;

mat4 rotX(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(1, 0, 0, 0, 
                 0, c, s, 0, 
                 0, -s, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   
   inPos.x *= 0.06;
   inPos.y *= 0.4;
   inPos.z *= 0.06; 
   inPos *= rotX(0.7);

   inPos.y += -85;
   inPos.z += 63;
   
   vec3 vBinormal = gl_NormalMatrix * rm_Binormal;
   vec3 vTangent = gl_NormalMatrix * rm_Tangent;
   
   Normal = normalize(Normal);
   vBinormal = normalize(vBinormal);
   vTangent = normalize(vTangent);
   
   mat3 View2Tangent = mat3(vTangent, vBinormal, Normal);
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   
   ViewDirection *= View2Tangent;
   LightDirection *= View2Tangent;
   
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.377778" VALUE_1="0.201899" VALUE_2="0.054813" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.059259" VALUE_1="0.023517" VALUE_2="0.000000" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.337255" VALUE_1="0.224265" VALUE_2="0.034073" VALUE_3="1.000000"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Rockwall" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmTextureObject NAME="bumpMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="rockwallBump" API=""/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="bumpMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Wood2" API="OpenGL" PASS_INDEX="18" ENABLED="TRUE">
    <RmModelReference NAME="Cube" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D bumpMap;
uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3 N = 2.0 * texture2D(bumpMap, Texcoord).xyz - 1.0;

   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

attribute vec3 rm_Binormal;
attribute vec3 rm_Tangent;

mat4 rotX(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(1, 0, 0, 0, 
                 0, c, s, 0, 
                 0, -s, c, 0, 
                 0, 0, 0, 1);
}

mat4 rotY(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(c, 0, -s, 0,
                 0, 1, 0, 0, 
                 s, 0, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   
   inPos.x *= 0.06;
   inPos.y *= 0.4;
   inPos.z *= 0.06; 
   inPos *= rotX(0.7);
   inPos *= rotY(1.5807);
   inPos.x -= 10;
   inPos.y += -85;
   inPos.z += 48;
   
   vec3 vBinormal = gl_NormalMatrix * rm_Binormal;
   vec3 vTangent = gl_NormalMatrix * rm_Tangent;
   
   Normal = normalize(Normal);
   vBinormal = normalize(vBinormal);
   vTangent = normalize(vTangent);
   
   mat3 View2Tangent = mat3(vTangent, vBinormal, Normal);
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   
   ViewDirection *= View2Tangent;
   LightDirection *= View2Tangent;
   
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.377778" VALUE_1="0.201899" VALUE_2="0.054813" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.059259" VALUE_1="0.023517" VALUE_2="0.000000" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.337255" VALUE_1="0.224265" VALUE_2="0.034073" VALUE_3="1.000000"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Rockwall" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmTextureObject NAME="bumpMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="rockwallBump" API=""/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="bumpMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Wood3" API="OpenGL" PASS_INDEX="19" ENABLED="TRUE">
    <RmModelReference NAME="Cube" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D bumpMap;
uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3 N = 2.0 * texture2D(bumpMap, Texcoord).xyz - 1.0;

   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

attribute vec3 rm_Binormal;
attribute vec3 rm_Tangent;

mat4 rotX(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(1, 0, 0, 0, 
                 0, c, s, 0, 
                 0, -s, c, 0, 
                 0, 0, 0, 1);
}

mat4 rotY(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(c, 0, -s, 0,
                 0, 1, 0, 0, 
                 s, 0, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   
   inPos.x *= 0.06;
   inPos.y *= 0.4;
   inPos.z *= 0.06; 
   inPos *= rotX(0.7);
   inPos *= rotY(-1.5807);
   inPos.x += 10;
   inPos.y += -85;
   inPos.z += 48;
   
   vec3 vBinormal = gl_NormalMatrix * rm_Binormal;
   vec3 vTangent = gl_NormalMatrix * rm_Tangent;
   
   Normal = normalize(Normal);
   vBinormal = normalize(vBinormal);
   vTangent = normalize(vTangent);
   
   mat3 View2Tangent = mat3(vTangent, vBinormal, Normal);
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   
   ViewDirection *= View2Tangent;
   LightDirection *= View2Tangent;
   
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.377778" VALUE_1="0.201899" VALUE_2="0.054813" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.059259" VALUE_1="0.023517" VALUE_2="0.000000" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.337255" VALUE_1="0.224265" VALUE_2="0.034073" VALUE_3="1.000000"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Rockwall" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmTextureObject NAME="bumpMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="rockwallBump" API=""/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="bumpMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Wood4" API="OpenGL" PASS_INDEX="20" ENABLED="TRUE">
    <RmModelReference NAME="Cube" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D bumpMap;
uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3 N = 2.0 * texture2D(bumpMap, Texcoord).xyz - 1.0;

   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

attribute vec3 rm_Binormal;
attribute vec3 rm_Tangent;

mat4 rotX(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(1, 0, 0, 0, 
                 0, c, s, 0, 
                 0, -s, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   
   inPos.x *= 0.06;
   inPos.y *= 0.4;
   inPos.z *= 0.06; 
   inPos *= rotX(-0.7);

   inPos.y += -85;
   inPos.z += 33;
   
   vec3 vBinormal = gl_NormalMatrix * rm_Binormal;
   vec3 vTangent = gl_NormalMatrix * rm_Tangent;
   
   Normal = normalize(Normal);
   vBinormal = normalize(vBinormal);
   vTangent = normalize(vTangent);
   
   mat3 View2Tangent = mat3(vTangent, vBinormal, Normal);
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   
   ViewDirection *= View2Tangent;
   LightDirection *= View2Tangent;
   
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.377778" VALUE_1="0.201899" VALUE_2="0.054813" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.059259" VALUE_1="0.023517" VALUE_2="0.000000" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.337255" VALUE_1="0.224265" VALUE_2="0.034073" VALUE_3="1.000000"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Rockwall" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmTextureObject NAME="bumpMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="rockwallBump" API=""/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="bumpMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Wood5" API="OpenGL" PASS_INDEX="21" ENABLED="TRUE">
    <RmModelReference NAME="Cube" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D bumpMap;
uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3 N = 2.0 * texture2D(bumpMap, Texcoord).xyz - 1.0;

   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

attribute vec3 rm_Binormal;
attribute vec3 rm_Tangent;

mat4 rotX(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(1, 0, 0, 0, 
                 0, c, s, 0, 
                 0, -s, c, 0, 
                 0, 0, 0, 1);
}

mat4 rotY(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(c, 0, -s, 0,
                 0, 1, 0, 0, 
                 s, 0, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   
   inPos.x *= 0.06;
   inPos.y *= 0.4;
   inPos.z *= 0.06; 
   inPos *= rotX(0.7);
   inPos *= rotY(-0.7);
   inPos.x += 7;
   inPos.y += -85;
   inPos.z += 58;
   
   vec3 vBinormal = gl_NormalMatrix * rm_Binormal;
   vec3 vTangent = gl_NormalMatrix * rm_Tangent;
   
   Normal = normalize(Normal);
   vBinormal = normalize(vBinormal);
   vTangent = normalize(vTangent);
   
   mat3 View2Tangent = mat3(vTangent, vBinormal, Normal);
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   
   ViewDirection *= View2Tangent;
   LightDirection *= View2Tangent;
   
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.377778" VALUE_1="0.201899" VALUE_2="0.054813" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.059259" VALUE_1="0.023517" VALUE_2="0.000000" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.337255" VALUE_1="0.224265" VALUE_2="0.034073" VALUE_3="1.000000"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Rockwall" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmTextureObject NAME="bumpMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="rockwallBump" API=""/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="bumpMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Wood6" API="OpenGL" PASS_INDEX="22" ENABLED="TRUE">
    <RmModelReference NAME="Cube" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D bumpMap;
uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3 N = 2.0 * texture2D(bumpMap, Texcoord).xyz - 1.0;

   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

attribute vec3 rm_Binormal;
attribute vec3 rm_Tangent;

mat4 rotX(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(1, 0, 0, 0, 
                 0, c, s, 0, 
                 0, -s, c, 0, 
                 0, 0, 0, 1);
}

mat4 rotY(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(c, 0, -s, 0,
                 0, 1, 0, 0, 
                 s, 0, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   
   inPos.x *= 0.06;
   inPos.y *= 0.4;
   inPos.z *= 0.06; 
   inPos *= rotX(0.7);
   inPos *= rotY(0.7);
   inPos.x -= 7;
   inPos.y += -85;
   inPos.z += 58;
   
   vec3 vBinormal = gl_NormalMatrix * rm_Binormal;
   vec3 vTangent = gl_NormalMatrix * rm_Tangent;
   
   Normal = normalize(Normal);
   vBinormal = normalize(vBinormal);
   vTangent = normalize(vTangent);
   
   mat3 View2Tangent = mat3(vTangent, vBinormal, Normal);
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   
   ViewDirection *= View2Tangent;
   LightDirection *= View2Tangent;
   
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.377778" VALUE_1="0.201899" VALUE_2="0.054813" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.059259" VALUE_1="0.023517" VALUE_2="0.000000" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.337255" VALUE_1="0.224265" VALUE_2="0.034073" VALUE_3="1.000000"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Rockwall" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmTextureObject NAME="bumpMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="rockwallBump" API=""/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="bumpMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Wood7" API="OpenGL" PASS_INDEX="23" ENABLED="TRUE">
    <RmModelReference NAME="Cube" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D bumpMap;
uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3 N = 2.0 * texture2D(bumpMap, Texcoord).xyz - 1.0;

   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

attribute vec3 rm_Binormal;
attribute vec3 rm_Tangent;

mat4 rotX(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(1, 0, 0, 0, 
                 0, c, s, 0, 
                 0, -s, c, 0, 
                 0, 0, 0, 1);
}

mat4 rotY(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(c, 0, -s, 0,
                 0, 1, 0, 0, 
                 s, 0, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   
   inPos.x *= 0.06;
   inPos.y *= 0.4;
   inPos.z *= 0.06; 
   inPos *= rotX(-0.7);
   inPos *= rotY(0.7);
   inPos.x += 7;
   inPos.y += -85;
   inPos.z += 38;
   
   vec3 vBinormal = gl_NormalMatrix * rm_Binormal;
   vec3 vTangent = gl_NormalMatrix * rm_Tangent;
   
   Normal = normalize(Normal);
   vBinormal = normalize(vBinormal);
   vTangent = normalize(vTangent);
   
   mat3 View2Tangent = mat3(vTangent, vBinormal, Normal);
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   
   ViewDirection *= View2Tangent;
   LightDirection *= View2Tangent;
   
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.377778" VALUE_1="0.201899" VALUE_2="0.054813" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.059259" VALUE_1="0.023517" VALUE_2="0.000000" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.337255" VALUE_1="0.224265" VALUE_2="0.034073" VALUE_3="1.000000"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Rockwall" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmTextureObject NAME="bumpMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="rockwallBump" API=""/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="bumpMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Wood8" API="OpenGL" PASS_INDEX="24" ENABLED="TRUE">
    <RmModelReference NAME="Cube" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D bumpMap;
uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3 N = 2.0 * texture2D(bumpMap, Texcoord).xyz - 1.0;

   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

attribute vec3 rm_Binormal;
attribute vec3 rm_Tangent;

mat4 rotX(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(1, 0, 0, 0, 
                 0, c, s, 0, 
                 0, -s, c, 0, 
                 0, 0, 0, 1);
}

mat4 rotY(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(c, 0, -s, 0,
                 0, 1, 0, 0, 
                 s, 0, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   
   inPos.x *= 0.06;
   inPos.y *= 0.4;
   inPos.z *= 0.06; 
   inPos *= rotX(-0.7);
   inPos *= rotY(-0.7);
   inPos.x -= 7;
   inPos.y += -85;
   inPos.z += 38;
   
   vec3 vBinormal = gl_NormalMatrix * rm_Binormal;
   vec3 vTangent = gl_NormalMatrix * rm_Tangent;
   
   Normal = normalize(Normal);
   vBinormal = normalize(vBinormal);
   vTangent = normalize(vTangent);
   
   mat3 View2Tangent = mat3(vTangent, vBinormal, Normal);
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   
   ViewDirection *= View2Tangent;
   LightDirection *= View2Tangent;
   
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.377778" VALUE_1="0.201899" VALUE_2="0.054813" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.059259" VALUE_1="0.023517" VALUE_2="0.000000" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.337255" VALUE_1="0.224265" VALUE_2="0.034073" VALUE_3="1.000000"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Rockwall" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmTextureObject NAME="bumpMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="rockwallBump" API=""/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="bumpMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="metalPlate" API="OpenGL" PASS_INDEX="25" ENABLED="TRUE">
    <RmModelReference NAME="Cube" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_DepthEnable" API="OpenGL" STATE="44" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D bumpMap;
uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3 N = 2.0 * texture2D(bumpMap, Texcoord).xyz - 1.0;
   
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

uniform float Scale;

attribute vec3 rm_Binormal;
attribute vec3 rm_Tangent;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;
   
void main( void )
{
   vec4 inPos = gl_Vertex;
   inPos.x *= 0.85;
   inPos.y *= 0.02;
   inPos.z *= 0.5;
   inPos.x += 1;
   inPos.y -= 35;
   inPos.z += 50;
   
   vec3 vBinormal = gl_NormalMatrix * rm_Binormal;
   vec3 vTangent = gl_NormalMatrix * rm_Tangent;
   
   Normal = normalize(Normal);
   vBinormal = normalize(vBinormal);
   vTangent = normalize(vTangent);
   
   mat3 View2Tangent = mat3(vTangent, vBinormal, Normal);
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy * 0.3;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   
   ViewDirection *= View2Tangent;
   LightDirection *= View2Tangent;
   
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="Scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.350000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.406627" VALUE_1="0.393772" VALUE_2="0.407407" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.125926" VALUE_1="0.089446" VALUE_2="0.073121" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.337255" VALUE_1="0.224265" VALUE_2="0.034073" VALUE_3="1.000000"/>
    <Rm2DTextureVariable NAME="Rusty Bump" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="rustymetalBump.tga" ORIGIN="0"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Rust" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmTextureObject NAME="bumpMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Rusty Bump" API=""/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="bumpMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Prong1" API="OpenGL" PASS_INDEX="26" ENABLED="TRUE">
    <RmModelReference NAME="Cube" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

uniform float Scale;
uniform float x;
uniform float y;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

mat4 rotX(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(1, 0, 0, 0, 
                 0, c, s, 0, 
                 0, -s, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   
   inPos.x *= 0.01;
   inPos.y *= 0.8;
   inPos.z *= 0.01; 
   inPos.x += -34.5;
   inPos.y += -72;
   inPos.z += 50;
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="Scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-78.247353" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="x" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.200000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-56.846046" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.207407" VALUE_1="0.193649" VALUE_2="0.196867" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.237037" VALUE_1="0.237037" VALUE_2="0.237037" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.337255" VALUE_1="0.224265" VALUE_2="0.034073" VALUE_3="1.000000"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Stone" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Prong2" API="OpenGL" PASS_INDEX="27" ENABLED="TRUE">
    <RmModelReference NAME="Cube" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

uniform float Scale;
uniform float x;
uniform float y;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

mat4 rotX(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(1, 0, 0, 0, 
                 0, c, s, 0, 
                 0, -s, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   
   inPos.x *= 0.01;
   inPos.y *= 0.8;
   inPos.z *= 0.01; 
   inPos.x += 34.5;
   inPos.y += -72;
   inPos.z += 50;
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="Scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-78.247353" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="x" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.200000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-56.846046" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.207407" VALUE_1="0.193649" VALUE_2="0.196867" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.237037" VALUE_1="0.237037" VALUE_2="0.237037" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.337255" VALUE_1="0.224265" VALUE_2="0.034073" VALUE_3="1.000000"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Stone" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="snakeThing" API="OpenGL" PASS_INDEX="28" ENABLED="TRUE">
    <RmModelReference NAME="Sphere" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D bumpMap;
uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3 N = 2.0 * texture2D(bumpMap, Texcoord).xyz - 1.0;
   
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

uniform float time;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

attribute vec3 rm_Binormal;
attribute vec3 rm_Tangent;

mat4 rotX(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(1, 0, 0, 0, 
                 0, c, s, 0, 
                 0, -s, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   
   inPos.x *= 0.05;
   inPos.y *= 1.2;
   inPos.z *= 0.05;
   inPos *= rotX(1.5708);
   float dispX = 5 * sin(time * 3.0);
   float dispZ = 30 * sin(time * 0.6);
   if(inPos.z < -10 && inPos.z > -20 || inPos.z < 40 && inPos.z > 30){
     inPos.x += dispX;
   }
   if(inPos.z < 20 && inPos.z > 10 || inPos.z < -30 && inPos.z > -40){
     inPos.x -= dispX;
   }
   inPos.x += 54.3;
   inPos.y += -90;
   inPos.z += 50.5;
   
   inPos.z += dispZ;
   
   vec3 vBinormal = gl_NormalMatrix * rm_Binormal;
   vec3 vTangent = gl_NormalMatrix * rm_Tangent;
   
   Normal = normalize(Normal);
   vBinormal = normalize(vBinormal);
   vTangent = normalize(vTangent);
   
   mat3 View2Tangent = mat3(vTangent, vBinormal, Normal);
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy * 2;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   
   ViewDirection *= View2Tangent;
   LightDirection *= View2Tangent;
   
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="time" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="Time0_X" VALUE="15.825019" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.385185" VALUE_1="0.385185" VALUE_2="0.385185" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.337255" VALUE_1="0.224265" VALUE_2="0.034073" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.088863" VALUE_1="0.259259" VALUE_2="0.056425" VALUE_3="1.000000"/>
    <Rm2DTextureVariable NAME="FieldstoneBumpDOT3" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="FieldstoneBumpDOT3.tga" ORIGIN="0"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Stone" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmTextureObject NAME="bumpMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="FieldstoneBumpDOT3" API=""/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="bumpMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="time" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Table" API="OpenGL" PASS_INDEX="6" ENABLED="TRUE">
    <RmModelReference NAME="Cube" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

uniform float Scale;
uniform float x;
uniform float y;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

mat4 rotX(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(1, 0, 0, 0, 
                 0, c, s, 0, 
                 0, -s, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   
   inPos.x *= 0.8;
   inPos.y *= 0.08;
   inPos.z *= 0.5; 
   inPos.x += 0.2;
   inPos.y += -57;
   inPos.z += -78;
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="Scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-78.247353" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="x" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.200000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-56.846046" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.437037" VALUE_1="0.408045" VALUE_2="0.414827" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.385185" VALUE_1="0.385185" VALUE_2="0.385185" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.337255" VALUE_1="0.224265" VALUE_2="0.034073" VALUE_3="1.000000"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Stone" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="ArmadilloMan" API="OpenGL" PASS_INDEX="29" ENABLED="TRUE">
    <RmModelReference NAME="Armadillo" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_DepthEnable" API="OpenGL" STATE="44" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestRGB" API="OpenGL" STATE="49" VALUE="8" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendEnable" API="OpenGL" STATE="46" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendSourceRGB" API="OpenGL" STATE="48" VALUE="7" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D bumpMap;
uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3 N = 2.0 * texture2D(bumpMap, Texcoord).xyz - 1.0;
   
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
   gl_FragColor.a *= 0.4;
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

uniform float time;

attribute vec3 rm_Binormal;
attribute vec3 rm_Tangent;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

mat4 rotY(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(c, 0, -s, 0,
                 0, 1, 0, 0, 
                 s, 0, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   float disp = 25.0 * sin(time * 2.5);
   inPos.x *= 0.4;
   inPos.y *= 0.4;
   inPos.z *= 0.4;
   inPos *= rotY(1.03);
   
   inPos.x -= 100;
   inPos.y -= 22;
   inPos.z += 110;
   
   inPos.y += disp;
   
   vec3 vBinormal = gl_NormalMatrix * rm_Binormal;
   vec3 vTangent = gl_NormalMatrix * rm_Tangent;
   
   Normal = normalize(Normal);
   vBinormal = normalize(vBinormal);
   vTangent = normalize(vTangent);
   
   mat3 View2Tangent = mat3(vTangent, vBinormal, Normal);
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy * 3;;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   
   ViewDirection *= View2Tangent;
   LightDirection *= View2Tangent;
   
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="time" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="Time0_X" VALUE="15.825019" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.021845" VALUE_1="0.021468" VALUE_2="0.022222" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.466667" VALUE_1="0.310320" VALUE_2="0.047147" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.051753" VALUE_1="0.050116" VALUE_2="0.051852" VALUE_3="1.000000"/>
    <Rm2DTextureVariable NAME="Rusty Bump" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="FieldstoneBumpDOT3.tga" ORIGIN="0"/>
    <RmTextureObject NAME="bumpMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Rusty Bump" API=""/>
    </RmTextureObject>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Rust" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="bumpMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="time" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Right Wall" API="OpenGL" PASS_INDEX="2" ENABLED="TRUE">
    <RmModelReference NAME="Model" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_DepthEnable" API="OpenGL" STATE="44" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="3" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform float particleShape;

uniform sampler2D bumpMap;
uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;
varying vec3  vLightVec;
varying vec3  vViewVec;

float saturate(float Value)
{
   return clamp(Value, 0.0, 1.0);
}

void main( void )
{
   vec3 N = 2.0 * texture2D(bumpMap, Texcoord).xyz - 1.0;
   
   vec3 nLightVec = normalize(vLightVec);
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = dot(nLightVec, fvNormal); 
   vec4 diffuseColour = vec4(1.0, 0.7, 0, 0);
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
   
   float attenuation = saturate((0.2 + particleShape) / (0.15 + 0.0001 * dot(vLightVec, vLightVec)));
  
   gl_FragColor = ( fvTotalAmbient + (fNDotL * fvDiffuse * fvBaseColor) + (attenuation*(fvTotalDiffuse*diffuseColour)) + fvTotalSpecular );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 viewPos;
uniform vec4 particlePosition;
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;
uniform float particleHeight;
uniform float Scale;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;
varying vec3 vLightVec;
varying vec3 vViewVec;

attribute vec3 rm_Binormal;
attribute vec3 rm_Tangent;

mat4 rotY(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(c, 0, -s, 0,
                 0, 1, 0, 0, 
                 s, 0, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   inPos.z = 10;
   inPos.x *= Scale;
   inPos.y *= Scale;
   inPos *= rotY(1.5708);
   inPos.x += 150;
   inPos.z += 115;
   
   vec3 vBinormal = gl_NormalMatrix * rm_Binormal;
   vec3 vTangent = gl_NormalMatrix * rm_Tangent;
   
   Normal = normalize(Normal);
   vBinormal = normalize(vBinormal);
   vTangent = normalize(vTangent);
   
   mat3 View2Tangent = mat3(vTangent, vBinormal, Normal);
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy * 3.5;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   
   ViewDirection *= View2Tangent;
   LightDirection *= View2Tangent;
   
   vLightVec = particlePosition.xyz - gl_Vertex.xyz;
   vLightVec.z += particleHeight + 100;
   vLightVec.x += particleHeight - 750;
   vLightVec.y += particleHeight + 100;
   
   vViewVec = viewPos.xyz - gl_Vertex.xyz;
   
   Normal = gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="Scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.200000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Fieldstone" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmTextureObject NAME="bumpMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="FieldstoneBumpDOT3" API=""/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="bumpMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particleHeight" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particlePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particleShape" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="Scale" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Front wall" API="OpenGL" PASS_INDEX="3" ENABLED="TRUE">
    <RmModelReference NAME="Model" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_DepthEnable" API="OpenGL" STATE="44" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="2" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D bumpMap;
uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3 N = 2.0 * texture2D(bumpMap, Texcoord).xyz - 1.0;

   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

uniform float Scale;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

attribute vec3 rm_Binormal;
attribute vec3 rm_Tangent;

void main( void )
{
   vec4 inPos = gl_Vertex;
   inPos.x *= Scale;
   inPos.y *= Scale;
   inPos.x += 80;
   inPos.z += 200;
   
   vec3 vBinormal = gl_NormalMatrix * rm_Binormal;
   vec3 vTangent = gl_NormalMatrix * rm_Tangent;
   
   Normal = normalize(Normal);
   vBinormal = normalize(vBinormal);
   vTangent = normalize(vTangent);
   
   mat3 View2Tangent = mat3(vTangent, vBinormal, Normal);
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy * 3.5;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   
   ViewDirection *= View2Tangent;
   LightDirection *= View2Tangent;
   
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="Scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.200000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Fieldstone" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmTextureObject NAME="bumpMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="FieldstoneBumpDOT3" API=""/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="bumpMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="Scale" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Leg1" API="OpenGL" PASS_INDEX="7" ENABLED="TRUE">
    <RmModelReference NAME="Cube" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

uniform float Scale;
uniform float x;
uniform float y;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

mat4 rotX(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(1, 0, 0, 0, 
                 0, c, s, 0, 
                 0, -s, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   
   inPos.x *= 0.1;
   inPos.y *= 0.4;
   inPos.z *= 0.1; 
   inPos.x += 35;
   inPos.y += -75;
   inPos.z += -97.5;
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="Scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-78.247353" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="x" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.200000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-56.846046" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.437037" VALUE_1="0.408045" VALUE_2="0.414827" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.385185" VALUE_1="0.385185" VALUE_2="0.385185" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.337255" VALUE_1="0.224265" VALUE_2="0.034073" VALUE_3="1.000000"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Stone" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Torch" API="OpenGL" PASS_INDEX="30" ENABLED="TRUE">
    <RmModelReference NAME="Cube" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_BlendEnable" API="OpenGL" STATE="46" VALUE="0" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_WriteMaskDepth" API="OpenGL" STATE="54" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform float particleShape;

varying vec3  vNormal;
varying vec3  vLightVec;
varying vec3  vViewVec;

float saturate(float Value)
{
   return clamp(Value, 0.0, 1.0);
}

void main(void)
{
   vec3 nLightVec   = normalize(vLightVec);
   vec3 normal = normalize(vNormal);
   
   float diffuse = dot(nLightVec, normal);
   vec4 diffuseColour = vec4(1.0, 0.7, 0, 0);

   float attenuation = saturate((0.2 + particleShape) / (0.15 + 0.0001 * dot(vLightVec, vLightVec)));

   gl_FragColor = attenuation * (diffuse * diffuseColour);
   
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform float particleHeight;
uniform vec4 viewPos;
uniform vec4 particlePosition;

varying vec3  vNormal;
varying vec3  vLightVec;
varying vec3  vViewVec;

mat4 rotZ(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(c, s, 0, 0, 
                 -s, c, 0, 0, 
                 0, 0, 1, 0, 
                 0, 0, 0, 1);
}

void main(void)
{
   vec4 inPos = gl_Vertex;
   inPos.xyz *= vec3(0.05, 0.3, 0.05);
   inPos *= rotZ(-0.1708);
   inPos.x += 138;
   gl_Position = gl_ModelViewProjectionMatrix * inPos;

   vNormal = gl_Normal;
   
   vLightVec = particlePosition.xyz - inPos.xyz;
   vLightVec.z += 0.3 * particleHeight;
   
   vViewVec = viewPos.xyz - inPos.xyz;

}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmShaderConstant NAME="particleHeight" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particlePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particleShape" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Fog" API="OpenGL" PASS_INDEX="31" ENABLED="TRUE">
    <RmModelReference NAME="Cube" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestRGB" API="OpenGL" STATE="49" VALUE="4" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendEnable" API="OpenGL" STATE="46" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendSourceRGB" API="OpenGL" STATE="48" VALUE="7" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse );
   gl_FragColor.a *= 3.5;
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

uniform float Scale;
uniform float x;
uniform float y;
uniform float time;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

mat4 rotX(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(1, 0, 0, 0, 
                 0, c, s, 0, 
                 0, -s, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   float disp = 3.5 * sin(time * 1.5 + inPos.x*inPos.y);
   inPos.x *= 3.0;
   inPos.y *= 0.08;
   inPos.z *= 3.0; 
   inPos.x += 0.2;
   inPos.y += -87;
   inPos.z += 30;
   
   inPos.xyz += disp * normalize(gl_Normal);
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="Scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-78.247353" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="x" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.200000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-56.846046" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="time" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="Time0_X" VALUE="15.825019" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.385185" VALUE_1="0.385185" VALUE_2="0.385185" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.337255" VALUE_1="0.224265" VALUE_2="0.034073" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.437037" VALUE_1="0.408045" VALUE_2="0.414827" VALUE_3="1.000000"/>
    <Rm2DTextureVariable NAME="cloud" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="Distortion2.jpg" ORIGIN="0"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="cloud" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="time" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="torchFire" API="OpenGL" PASS_INDEX="32" ENABLED="TRUE">
    <RmModelReference NAME="QuadArray" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_BlendEnable" API="OpenGL" STATE="46" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_WriteMaskDepth" API="OpenGL" STATE="54" VALUE="0" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestAlpha" API="OpenGL" STATE="51" VALUE="2" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestRGB" API="OpenGL" STATE="49" VALUE="2" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform sampler2D baseMap;
uniform float particleShape;

varying vec2  Texcoord;
varying float vColour;

void main(void)
{
   
   float fade = pow(dot(Texcoord, Texcoord), particleShape);
   gl_FragColor = (1.0 - fade) * texture2D(baseMap, vec2(vColour,0.0));
   
  
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform float time;
uniform float particleHeight;
uniform float particleSpeed;
uniform float particleSpread;
uniform float particleConeWidth;
uniform float particleShape;
uniform float particleSize;
uniform vec4  particlePosition;
uniform mat4  viewInv;

varying vec2  Texcoord;
varying float vColour;

void main(void)
{
   float t = fract(gl_Vertex.z + particleSpeed * time);
   float s = pow(t, particleConeWidth);

   vec3 inPos;
   inPos.x = particleSpread * s * cos(70.0 * gl_Vertex.z);
   inPos.y = particleHeight * t;   
   inPos.z = particleSpread * s * sin(150.0 * gl_Vertex.z);

   inPos += particleSize * (gl_Vertex.x * viewInv[0] + gl_Vertex.y * viewInv[1]).xyz;
   inPos += particlePosition.xyz;

   gl_Position = gl_ModelViewProjectionMatrix * vec4(inPos,1.0);
   
   Texcoord = gl_Vertex.xy;
   vColour = 1.0 - t;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Flame" API=""/>
     <RmState NAME="GL_TextureWrapR" API="OpenGL" STATE="3" VALUE="2" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureWrapS" API="OpenGL" STATE="1" VALUE="2" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureWrapT" API="OpenGL" STATE="2" VALUE="2" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particleHeight" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particlePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particleShape" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particleSize" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particleSpeed" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particleSpread" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="time" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="viewInv" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particleConeWidth" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Leg2" API="OpenGL" PASS_INDEX="8" ENABLED="TRUE">
    <RmModelReference NAME="Cube" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

uniform float Scale;
uniform float x;
uniform float y;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

mat4 rotX(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(1, 0, 0, 0, 
                 0, c, s, 0, 
                 0, -s, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   
   inPos.x *= 0.1;
   inPos.y *= 0.4;
   inPos.z *= 0.1; 
   inPos.x += 35;
   inPos.y += -75;
   inPos.z += -58.5;
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="Scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-78.247353" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="x" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.200000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-56.846046" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.437037" VALUE_1="0.408045" VALUE_2="0.414827" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.385185" VALUE_1="0.385185" VALUE_2="0.385185" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.337255" VALUE_1="0.224265" VALUE_2="0.034073" VALUE_3="1.000000"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Stone" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Smoke" API="OpenGL" PASS_INDEX="33" ENABLED="TRUE">
    <RmModelReference NAME="QuadArray" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_BlendDestAlpha" API="OpenGL" STATE="51" VALUE="2" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestRGB" API="OpenGL" STATE="49" VALUE="2" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendEnable" API="OpenGL" STATE="46" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_WriteMaskDepth" API="OpenGL" STATE="54" VALUE="0" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform sampler2D baseMap;
uniform float particleShape;

varying vec2  Texcoord;

void main(void)
{
   float fade = pow(dot(Texcoord, Texcoord), particleShape);
   gl_FragColor = (1.0 - fade) * texture2D(baseMap, Texcoord);
   
  
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform mat4  viewInv;

uniform float time;
uniform float particleHeight;
uniform float particleSpeed;
uniform float particleSpread;
uniform float particleConeWidth;
uniform float particleShape;
uniform float particleSize;

varying vec2  Texcoord;

void main(void)
{
   float t = fract(gl_Vertex.z + particleSpeed * time);
   float s = pow(t, particleConeWidth);

   vec3 inPos;
   inPos.x = 0.3 * particleSpread * s * cos(63.0 * gl_Vertex.z);
   inPos.y = 0.3 * particleHeight * t;
   inPos.z = 0.3 * particleSpread * s * sin(80.0 * gl_Vertex.z);
     
   inPos += particleSize * (gl_Vertex.x * viewInv[0] + gl_Vertex.y * viewInv[1]).xyz;

   inPos.x -= 25;
   inPos.y -= 15;
   inPos.z += 50;
   
   gl_Position = gl_ModelViewProjectionMatrix * vec4(inPos, 1.0);
   
   Texcoord = gl_Vertex.xy;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="time" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="Time0_X" VALUE="15.825019" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmMatrixVariable NAME="viewInv" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="ViewInverse" VALUE_0="1.000000" VALUE_1="0.000000" VALUE_2="0.000000" VALUE_3="0.000000" VALUE_4="0.000000" VALUE_5="1.000000" VALUE_6="0.000000" VALUE_7="0.000000" VALUE_8="0.000000" VALUE_9="0.000000" VALUE_10="1.000000" VALUE_11="200.000000" VALUE_12="0.000000" VALUE_13="0.000000" VALUE_14="0.000000" VALUE_15="1.000000"/>
    <RmFloatVariable NAME="particleHeight" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="40.000000" MIN="0.000000" MAX="160.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="particleSpeed" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="0.460000" MIN="0.000000" MAX="2.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="particleSpread" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="14.000000" MIN="0.000000" MAX="50.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="particleConeWidth" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="1.140000" MIN="0.000000" MAX="2.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="particleShape" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="0.280000" MIN="0.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="particleSize" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="3.600000" MIN="0.000000" MAX="20.000000" CLAMP="FALSE"/>
    <Rm2DTextureVariable NAME="Flame" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" FILE_NAME="cloud.tga" ORIGIN="0"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Flame" API=""/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particleHeight" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particleShape" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particleSize" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particleSpeed" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particleSpread" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="time" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="viewInv" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particleConeWidth" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Fire" API="OpenGL" PASS_INDEX="34" ENABLED="TRUE">
    <RmModelReference NAME="QuadArray" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_BlendDestAlpha" API="OpenGL" STATE="51" VALUE="2" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestRGB" API="OpenGL" STATE="49" VALUE="2" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendEnable" API="OpenGL" STATE="46" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_WriteMaskDepth" API="OpenGL" STATE="54" VALUE="0" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform sampler2D baseMap;
uniform float particleShape;

varying vec2  Texcoord;
varying float vColour;

void main(void)
{
   float fade = pow(dot(Texcoord, Texcoord), particleShape);
   gl_FragColor = (1.0 - fade) * texture2D(baseMap, vec2(vColour,0.0));
   
  
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform float time;
uniform float particleHeight;
uniform float particleSpeed;
uniform float particleSpread;
uniform float particleConeWidth;
uniform float particleShape;
uniform float particleSize;
uniform mat4  viewInv;

varying vec2  Texcoord;
varying float vColour;

void main(void)
{
   float t = fract(gl_Vertex.z + particleSpeed * time);
   float s = pow(t, particleConeWidth);

   vec3 inPos;
   inPos.x = particleSpread * s * cos(63.0 * gl_Vertex.z);
   inPos.y = 0.6 * particleHeight * t;
   inPos.z = particleSpread * s * sin(80.0 * gl_Vertex.z);
     
   inPos += particleSize * (gl_Vertex.x * viewInv[0] + gl_Vertex.y * viewInv[1]).xyz;

   inPos.y -= 88;
   inPos.z += 50;
   
   gl_Position = gl_ModelViewProjectionMatrix * vec4(inPos, 1.0);
   
   Texcoord = gl_Vertex.xy;
   vColour    = 1.0 - t;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="time" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="Time0_X" VALUE="15.825019" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmMatrixVariable NAME="viewInv" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="ViewInverse" VALUE_0="1.000000" VALUE_1="0.000000" VALUE_2="0.000000" VALUE_3="0.000000" VALUE_4="0.000000" VALUE_5="1.000000" VALUE_6="0.000000" VALUE_7="0.000000" VALUE_8="0.000000" VALUE_9="0.000000" VALUE_10="1.000000" VALUE_11="200.000000" VALUE_12="0.000000" VALUE_13="0.000000" VALUE_14="0.000000" VALUE_15="1.000000"/>
    <RmFloatVariable NAME="particleHeight" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="80.000000" MIN="0.000000" MAX="160.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="particleSpeed" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="0.480000" MIN="0.000000" MAX="2.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="particleSpread" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="20.000000" MIN="0.000000" MAX="50.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="particleConeWidth" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="1.000000" MIN="0.000000" MAX="2.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="particleShape" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="0.290000" MIN="0.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="particleSize" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="7.800000" MIN="0.000000" MAX="20.000000" CLAMP="FALSE"/>
    <Rm2DTextureVariable NAME="Flame" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" FILE_NAME="Flame.tga" ORIGIN="0"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Flame" API=""/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particleHeight" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particleShape" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particleSize" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particleSpeed" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particleSpread" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="time" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="viewInv" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="particleConeWidth" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Leg3" API="OpenGL" PASS_INDEX="9" ENABLED="TRUE">
    <RmModelReference NAME="Cube" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

uniform float Scale;
uniform float x;
uniform float y;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

mat4 rotX(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(1, 0, 0, 0, 
                 0, c, s, 0, 
                 0, -s, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   
   inPos.x *= 0.1;
   inPos.y *= 0.4;
   inPos.z *= 0.1; 
   inPos.x += -34.3;
   inPos.y += -75;
   inPos.z += -58.5;
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="Scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-78.247353" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="x" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.200000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-56.846046" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.437037" VALUE_1="0.408045" VALUE_2="0.414827" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.385185" VALUE_1="0.385185" VALUE_2="0.385185" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.337255" VALUE_1="0.224265" VALUE_2="0.034073" VALUE_3="1.000000"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Stone" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Leg4" API="OpenGL" PASS_INDEX="10" ENABLED="TRUE">
    <RmModelReference NAME="Cube" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

uniform float Scale;
uniform float x;
uniform float y;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

mat4 rotX(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(1, 0, 0, 0, 
                 0, c, s, 0, 
                 0, -s, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   
   inPos.x *= 0.1;
   inPos.y *= 0.4;
   inPos.z *= 0.1; 
   inPos.x += -34.5;
   inPos.y += -75;
   inPos.z += -97.5;
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="Scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-78.247353" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="x" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.200000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-56.846046" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.437037" VALUE_1="0.408045" VALUE_2="0.414827" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.385185" VALUE_1="0.385185" VALUE_2="0.385185" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.337255" VALUE_1="0.224265" VALUE_2="0.034073" VALUE_3="1.000000"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Stone" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Teapot" API="OpenGL" PASS_INDEX="11" ENABLED="TRUE">
    <RmModelReference NAME="Teapot" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_DepthEnable" API="OpenGL" STATE="44" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D bumpMap;
uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3 N = 2.0 * texture2D(bumpMap, Texcoord).xyz - 1.0;
   
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

uniform float Scale;

attribute vec3 rm_Binormal;
attribute vec3 rm_Tangent;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;
   
void main( void )
{
   vec4 inPos = gl_Vertex;
   inPos.x *= Scale;
   inPos.y *= Scale;
   inPos.z *= Scale;
   inPos.x += 1;
   inPos.y -= 22;
   inPos.z += 50;
   
   vec3 vBinormal = gl_NormalMatrix * rm_Binormal;
   vec3 vTangent = gl_NormalMatrix * rm_Tangent;
   
   Normal = normalize(Normal);
   vBinormal = normalize(vBinormal);
   vTangent = normalize(vTangent);
   
   mat3 View2Tangent = mat3(vTangent, vBinormal, Normal);
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy * 0.3;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   
   ViewDirection *= View2Tangent;
   LightDirection *= View2Tangent;
   
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="Scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.350000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.998084" VALUE_1="0.966531" VALUE_2="1.000000" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.983019" VALUE_1="0.966038" VALUE_2="1.000000" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.466667" VALUE_1="0.310320" VALUE_2="0.047147" VALUE_3="1.000000"/>
    <Rm2DTextureVariable NAME="Rusty Bump" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="rustymetalBump.tga" ORIGIN="0"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Rust" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmTextureObject NAME="bumpMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Rusty Bump" API=""/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="bumpMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="Scale" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Floor" API="OpenGL" PASS_INDEX="4" ENABLED="TRUE">
    <RmModelReference NAME="Model" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_DepthEnable" API="OpenGL" STATE="44" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D bumpMap;
uniform sampler2D baseMap;
uniform sampler2D heightMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

uniform float Scale1;
uniform float bias0;

void main( void )
{  
   vec3 L = normalize(LightDirection);
   vec3 V = normalize(ViewDirection);
   
   float height = texture2D(heightMap, Texcoord).x;
   height = Scale1 * height - bias0;
   
   vec2 TexCorrected = Texcoord + height * V.xy;
   
   vec3 N = 2.0 * texture2D(bumpMap, TexCorrected) - 1.0;
   
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, TexCorrected );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

uniform float Scale;
uniform float x;
uniform float y;

attribute vec3 rm_Binormal;
attribute vec3 rm_Tangent;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

mat4 rotX(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(1, 0, 0, 0, 
                 0, c, s, 0, 
                 0, -s, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   inPos.x *= x;
   inPos.y *= Scale;
   inPos *= rotX(1.5708);
   inPos.x += 79.95;
   inPos.y -= 65;
   inPos.z += 27;
   
   vec3 vBinormal = gl_NormalMatrix * rm_Binormal;
   vec3 vTangent = gl_NormalMatrix * rm_Tangent;
   
   Normal = normalize(Normal);
   vBinormal = normalize(vBinormal);
   vTangent = normalize(vTangent);
   
   mat3 View2Tangent = mat3(vTangent, vBinormal, Normal);
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy * 4;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   

   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
  
   ViewDirection *= View2Tangent;
   LightDirection *= View2Tangent;
   

   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="Scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.359600" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="x" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.214400" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="79.956673" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="Scale1" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="bias0" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.000000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.337255" VALUE_1="0.223529" VALUE_2="0.035294" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.629630" VALUE_1="0.434659" VALUE_2="0.375193" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.872180" VALUE_1="0.872180" VALUE_2="0.872180" VALUE_3="1.000000"/>
    <Rm2DTextureVariable NAME="bumpMap" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="rockwall_normal.bmp" ORIGIN="0"/>
    <Rm2DTextureVariable NAME="heightMap" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="rockwall_height.bmp" ORIGIN="0"/>
    <RmTextureObject NAME="heightMap" API="OpenGL" STATE_INDEX="2" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="heightMap" API=""/>
    </RmTextureObject>
    <RmTextureObject NAME="bumpMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="bumpMap" API=""/>
    </RmTextureObject>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Rockwall" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="bumpMap" API="" REGISTER="-1"/>
    <RmSampler NAME="heightMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="x" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="Scale" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="Scale1" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="bias0" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Back Wall" API="OpenGL" PASS_INDEX="0" ENABLED="TRUE">
    <RmModelReference NAME="Model" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="3" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_DepthEnable" API="OpenGL" STATE="44" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D bumpMap;
uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3 N = 2.0 * texture2D(bumpMap, Texcoord).xyz - 1.0;
   
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

attribute vec3 rm_Binormal;
attribute vec3 rm_Tangent;
   
void main( void )
{
   vec4 inPos = gl_Vertex;
   inPos.x *= 0.2;
   inPos.y *= 0.2;
   inPos.x += 80;
   inPos.z -= 80;
   
   vec3 vBinormal = gl_NormalMatrix * rm_Binormal;
   vec3 vTangent = gl_NormalMatrix * rm_Tangent;
   
   Normal = normalize(Normal);
   vBinormal = normalize(vBinormal);
   vTangent = normalize(vTangent);
   
   mat3 View2Tangent = mat3(vTangent, vBinormal, Normal);
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy * 3.5;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   
   ViewDirection *= View2Tangent;
   LightDirection *= View2Tangent;
   
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="Scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.200000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Fieldstone" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmTextureObject NAME="bumpMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="FieldstoneBumpDOT3" API=""/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="bumpMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Pillar1" API="OpenGL" PASS_INDEX="12" ENABLED="TRUE">
    <RmModelReference NAME="Pillar" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_DepthEnable" API="OpenGL" STATE="44" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D bumpMap;
uniform sampler2D baseMap;
uniform sampler2D heightMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

uniform float Scale1;
uniform float bias0;

void main( void )
{  
   vec3 L = normalize(LightDirection);
   vec3 V = normalize(ViewDirection);
   
   float height = texture2D(heightMap, Texcoord).x;
   height = Scale1 * height - bias0;
   
   vec2 TexCorrected = Texcoord + height * V.xy;
   
   vec3 N = 2.0 * texture2D(bumpMap, TexCorrected) - 1.0;
   
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, TexCorrected );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

uniform float Scale;
uniform float x;
uniform float y;

attribute vec3 rm_Binormal;
attribute vec3 rm_Tangent;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

mat4 rotX(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(1, 0, 0, 0, 
                 0, c, s, 0, 
                 0, -s, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   inPos.x *= 1.2;
   inPos.y *= 1.2;
   inPos.z *= 1.5;
   
   inPos *= rotX(1.5708);
   
   inPos.x += 105;
   inPos.y -= 1;
   inPos.z -= 65;
   
   vec3 vBinormal = gl_NormalMatrix * rm_Binormal;
   vec3 vTangent = gl_NormalMatrix * rm_Tangent;
   
   Normal = normalize(Normal);
   vBinormal = normalize(vBinormal);
   vTangent = normalize(vTangent);
   
   mat3 View2Tangent = mat3(vTangent, vBinormal, Normal);
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy / 1.5;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   

   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
  
   ViewDirection *= View2Tangent;
   LightDirection *= View2Tangent;
   

   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="Scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.100000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="x" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.214400" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="79.956673" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="Scale1" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="bias0" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.000000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.000000" VALUE_1="0.000000" VALUE_2="0.000000" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.576471" VALUE_1="0.552658" VALUE_2="0.552658" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.711111" VALUE_1="0.711111" VALUE_2="0.711111" VALUE_3="1.000000"/>
    <Rm2DTextureVariable NAME="bumpMap" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="rockwall_normal.bmp" ORIGIN="0"/>
    <Rm2DTextureVariable NAME="heightMap" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="rockwall_height.bmp" ORIGIN="0"/>
    <RmTextureObject NAME="heightMap" API="OpenGL" STATE_INDEX="2" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="heightMap" API=""/>
    </RmTextureObject>
    <RmTextureObject NAME="bumpMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="bumpMap" API=""/>
    </RmTextureObject>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Rockwall" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="bumpMap" API="" REGISTER="-1"/>
    <RmSampler NAME="heightMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="Scale1" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="bias0" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Roof" API="OpenGL" PASS_INDEX="5" ENABLED="TRUE">
    <RmModelReference NAME="Model" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="2" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_DepthEnable" API="OpenGL" STATE="44" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

uniform float Scale;
uniform float x;
uniform float y;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

mat4 rotX(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(1, 0, 0, 0, 
                 0, c, s, 0, 
                 0, -s, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   inPos.x *= x;
   inPos.y *= Scale;
   inPos *= rotX(1.5708);
   inPos.x += 79.95;
   inPos.y += y;
   inPos.z += 27;
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy * 10;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="Scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.332000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="x" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.200000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="114.507500" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.119403" VALUE_1="0.111482" VALUE_2="0.113335" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.370370" VALUE_1="0.370370" VALUE_2="0.370370" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.337255" VALUE_1="0.224265" VALUE_2="0.034073" VALUE_3="1.000000"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Wood" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="x" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="y" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="Scale" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Pillar2" API="OpenGL" PASS_INDEX="13" ENABLED="TRUE">
    <RmModelReference NAME="Pillar" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_DepthEnable" API="OpenGL" STATE="44" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D bumpMap;
uniform sampler2D baseMap;
uniform sampler2D heightMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

uniform float Scale1;
uniform float bias0;

void main( void )
{  
   vec3 L = normalize(LightDirection);
   vec3 V = normalize(ViewDirection);
   
   float height = texture2D(heightMap, Texcoord).x;
   height = Scale1 * height - bias0;
   
   vec2 TexCorrected = Texcoord + height * V.xy;
   
   vec3 N = 2.0 * texture2D(bumpMap, TexCorrected) - 1.0;
   
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, TexCorrected );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

uniform float Scale;
uniform float x;
uniform float y;

attribute vec3 rm_Binormal;
attribute vec3 rm_Tangent;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

mat4 rotX(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(1, 0, 0, 0, 
                 0, c, s, 0, 
                 0, -s, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   inPos.x *= 1.2;
   inPos.y *= 1.2;
   inPos.z *= 1.5;
   
   inPos *= rotX(1.5708);
   
   inPos.x -= 105;
   inPos.y -= 1;
   inPos.z -= 65;
   
   vec3 vBinormal = gl_NormalMatrix * rm_Binormal;
   vec3 vTangent = gl_NormalMatrix * rm_Tangent;
   
   Normal = normalize(Normal);
   vBinormal = normalize(vBinormal);
   vTangent = normalize(vTangent);
   
   mat3 View2Tangent = mat3(vTangent, vBinormal, Normal);
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy / 1.5;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   

   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
  
   ViewDirection *= View2Tangent;
   LightDirection *= View2Tangent;
   

   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="Scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.100000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="x" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.214400" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="79.956673" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="Scale1" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="bias0" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.000000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.000000" VALUE_1="0.000000" VALUE_2="0.000000" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.576471" VALUE_1="0.552658" VALUE_2="0.552658" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.711111" VALUE_1="0.711111" VALUE_2="0.711111" VALUE_3="1.000000"/>
    <Rm2DTextureVariable NAME="bumpMap" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="rockwall_normal.bmp" ORIGIN="0"/>
    <Rm2DTextureVariable NAME="heightMap" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="rockwall_height.bmp" ORIGIN="0"/>
    <RmTextureObject NAME="heightMap" API="OpenGL" STATE_INDEX="2" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="heightMap" API=""/>
    </RmTextureObject>
    <RmTextureObject NAME="bumpMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="bumpMap" API=""/>
    </RmTextureObject>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Rockwall" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="bumpMap" API="" REGISTER="-1"/>
    <RmSampler NAME="heightMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="Scale1" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="bias0" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Pillar3" API="OpenGL" PASS_INDEX="14" ENABLED="TRUE">
    <RmModelReference NAME="Pillar" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_DepthEnable" API="OpenGL" STATE="44" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D bumpMap;
uniform sampler2D baseMap;
uniform sampler2D heightMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

uniform float Scale1;
uniform float bias0;

void main( void )
{  
   vec3 L = normalize(LightDirection);
   vec3 V = normalize(ViewDirection);
   
   float height = texture2D(heightMap, Texcoord).x;
   height = Scale1 * height - bias0;
   
   vec2 TexCorrected = Texcoord + height * V.xy;
   
   vec3 N = 2.0 * texture2D(bumpMap, TexCorrected) - 1.0;
   
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, TexCorrected );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

uniform float Scale;
uniform float x;
uniform float y;

attribute vec3 rm_Binormal;
attribute vec3 rm_Tangent;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

mat4 rotX(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(1, 0, 0, 0, 
                 0, c, s, 0, 
                 0, -s, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   inPos.x *= 1.2;
   inPos.y *= 1.2;
   inPos.z *= 1.5;
   
   inPos *= rotX(1.5708);
   
   inPos.x += 105;
   inPos.y -= 1;
   inPos.z += 145;
   
   vec3 vBinormal = gl_NormalMatrix * rm_Binormal;
   vec3 vTangent = gl_NormalMatrix * rm_Tangent;
   
   Normal = normalize(Normal);
   vBinormal = normalize(vBinormal);
   vTangent = normalize(vTangent);
   
   mat3 View2Tangent = mat3(vTangent, vBinormal, Normal);
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy / 1.5;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   

   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
  
   ViewDirection *= View2Tangent;
   LightDirection *= View2Tangent;
   

   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="Scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.100000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="x" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.214400" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="79.956673" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="Scale1" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="bias0" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.000000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.000000" VALUE_1="0.000000" VALUE_2="0.000000" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.576471" VALUE_1="0.552658" VALUE_2="0.552658" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.711111" VALUE_1="0.711111" VALUE_2="0.711111" VALUE_3="1.000000"/>
    <Rm2DTextureVariable NAME="bumpMap" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="rockwall_normal.bmp" ORIGIN="0"/>
    <Rm2DTextureVariable NAME="heightMap" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="rockwall_height.bmp" ORIGIN="0"/>
    <RmTextureObject NAME="heightMap" API="OpenGL" STATE_INDEX="2" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="heightMap" API=""/>
    </RmTextureObject>
    <RmTextureObject NAME="bumpMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="bumpMap" API=""/>
    </RmTextureObject>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Rockwall" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="bumpMap" API="" REGISTER="-1"/>
    <RmSampler NAME="heightMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="Scale1" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="bias0" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="Pillar4" API="OpenGL" PASS_INDEX="15" ENABLED="TRUE">
    <RmModelReference NAME="Pillar" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_DepthEnable" API="OpenGL" STATE="44" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;

uniform sampler2D bumpMap;
uniform sampler2D baseMap;
uniform sampler2D heightMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

uniform float Scale1;
uniform float bias0;

void main( void )
{  
   vec3 L = normalize(LightDirection);
   vec3 V = normalize(ViewDirection);
   
   float height = texture2D(heightMap, Texcoord).x;
   height = Scale1 * height - bias0;
   
   vec2 TexCorrected = Texcoord + height * V.xy;
   
   vec3 N = 2.0 * texture2D(bumpMap, TexCorrected) - 1.0;
   
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, TexCorrected );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

uniform float Scale;
uniform float x;
uniform float y;

attribute vec3 rm_Binormal;
attribute vec3 rm_Tangent;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

mat4 rotX(float angle){
     float s = sin(angle);
     float c = cos(angle);
     
     return mat4(1, 0, 0, 0, 
                 0, c, s, 0, 
                 0, -s, c, 0, 
                 0, 0, 0, 1);
}

void main( void )
{
   vec4 inPos = gl_Vertex;
   inPos.x *= 1.2;
   inPos.y *= 1.2;
   inPos.z *= 1.5;
   
   inPos *= rotX(1.5708);
   
   inPos.x -= 105;
   inPos.y -= 1;
   inPos.z += 145;
   
   vec3 vBinormal = gl_NormalMatrix * rm_Binormal;
   vec3 vTangent = gl_NormalMatrix * rm_Tangent;
   
   Normal = normalize(Normal);
   vBinormal = normalize(vBinormal);
   vTangent = normalize(vTangent);
   
   mat3 View2Tangent = mat3(vTangent, vBinormal, Normal);
   
   gl_Position = gl_ModelViewProjectionMatrix * inPos;
   Texcoord    = gl_MultiTexCoord0.xy / 1.5;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   

   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
  
   ViewDirection *= View2Tangent;
   LightDirection *= View2Tangent;
   

   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmFloatVariable NAME="Scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.100000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="x" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.214400" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="79.956673" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="Scale1" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="bias0" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.000000" MIN="-1.000000" MAX="0.000000" CLAMP="FALSE"/>
    <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.000000" VALUE_1="0.000000" VALUE_2="0.000000" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.576471" VALUE_1="0.552658" VALUE_2="0.552658" VALUE_3="1.000000"/>
    <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.711111" VALUE_1="0.711111" VALUE_2="0.711111" VALUE_3="1.000000"/>
    <Rm2DTextureVariable NAME="bumpMap" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="rockwall_normal.bmp" ORIGIN="0"/>
    <Rm2DTextureVariable NAME="heightMap" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="rockwall_height.bmp" ORIGIN="0"/>
    <RmTextureObject NAME="heightMap" API="OpenGL" STATE_INDEX="2" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="heightMap" API=""/>
    </RmTextureObject>
    <RmTextureObject NAME="bumpMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="bumpMap" API=""/>
    </RmTextureObject>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Rockwall" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="bumpMap" API="" REGISTER="-1"/>
    <RmSampler NAME="heightMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="Scale1" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="bias0" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
   </RmGLPass>
  </RmOpenGLEffect>
 </RmEffectWorkspace>
</RENDER_MONKEY>
